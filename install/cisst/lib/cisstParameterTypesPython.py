# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _cisstParameterTypesPython
else:
    import _cisstParameterTypesPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_SwigPyIterator

    def value(self):
        return _cisstParameterTypesPython.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _cisstParameterTypesPython.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _cisstParameterTypesPython.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _cisstParameterTypesPython.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _cisstParameterTypesPython.SwigPyIterator_equal(self, x)

    def copy(self):
        return _cisstParameterTypesPython.SwigPyIterator_copy(self)

    def next(self):
        return _cisstParameterTypesPython.SwigPyIterator_next(self)

    def __next__(self):
        return _cisstParameterTypesPython.SwigPyIterator___next__(self)

    def previous(self):
        return _cisstParameterTypesPython.SwigPyIterator_previous(self)

    def advance(self, n):
        return _cisstParameterTypesPython.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _cisstParameterTypesPython.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _cisstParameterTypesPython.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _cisstParameterTypesPython.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _cisstParameterTypesPython.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _cisstParameterTypesPython.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _cisstParameterTypesPython.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _cisstParameterTypesPython:
_cisstParameterTypesPython.SwigPyIterator_swigregister(SwigPyIterator)

class ios_base(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _cisstParameterTypesPython.ios_base_erase_event
    imbue_event = _cisstParameterTypesPython.ios_base_imbue_event
    copyfmt_event = _cisstParameterTypesPython.ios_base_copyfmt_event

    def register_callback(self, __fn, __index):
        return _cisstParameterTypesPython.ios_base_register_callback(self, __fn, __index)

    def flags(self, *args):
        return _cisstParameterTypesPython.ios_base_flags(self, *args)

    def setf(self, *args):
        return _cisstParameterTypesPython.ios_base_setf(self, *args)

    def unsetf(self, __mask):
        return _cisstParameterTypesPython.ios_base_unsetf(self, __mask)

    def precision(self, *args):
        return _cisstParameterTypesPython.ios_base_precision(self, *args)

    def width(self, *args):
        return _cisstParameterTypesPython.ios_base_width(self, *args)

    @staticmethod
    def sync_with_stdio(__sync=True):
        return _cisstParameterTypesPython.ios_base_sync_with_stdio(__sync)

    def imbue(self, __loc):
        return _cisstParameterTypesPython.ios_base_imbue(self, __loc)

    def getloc(self):
        return _cisstParameterTypesPython.ios_base_getloc(self)

    @staticmethod
    def xalloc():
        return _cisstParameterTypesPython.ios_base_xalloc()

    def iword(self, __ix):
        return _cisstParameterTypesPython.ios_base_iword(self, __ix)

    def pword(self, __ix):
        return _cisstParameterTypesPython.ios_base_pword(self, __ix)
    __swig_destroy__ = _cisstParameterTypesPython.delete_ios_base

# Register ios_base in _cisstParameterTypesPython:
_cisstParameterTypesPython.ios_base_swigregister(ios_base)
cvar = _cisstParameterTypesPython.cvar
ios_base.boolalpha = _cisstParameterTypesPython.cvar.ios_base_boolalpha
ios_base.dec = _cisstParameterTypesPython.cvar.ios_base_dec
ios_base.fixed = _cisstParameterTypesPython.cvar.ios_base_fixed
ios_base.hex = _cisstParameterTypesPython.cvar.ios_base_hex
ios_base.internal = _cisstParameterTypesPython.cvar.ios_base_internal
ios_base.left = _cisstParameterTypesPython.cvar.ios_base_left
ios_base.oct = _cisstParameterTypesPython.cvar.ios_base_oct
ios_base.right = _cisstParameterTypesPython.cvar.ios_base_right
ios_base.scientific = _cisstParameterTypesPython.cvar.ios_base_scientific
ios_base.showbase = _cisstParameterTypesPython.cvar.ios_base_showbase
ios_base.showpoint = _cisstParameterTypesPython.cvar.ios_base_showpoint
ios_base.showpos = _cisstParameterTypesPython.cvar.ios_base_showpos
ios_base.skipws = _cisstParameterTypesPython.cvar.ios_base_skipws
ios_base.unitbuf = _cisstParameterTypesPython.cvar.ios_base_unitbuf
ios_base.uppercase = _cisstParameterTypesPython.cvar.ios_base_uppercase
ios_base.adjustfield = _cisstParameterTypesPython.cvar.ios_base_adjustfield
ios_base.basefield = _cisstParameterTypesPython.cvar.ios_base_basefield
ios_base.floatfield = _cisstParameterTypesPython.cvar.ios_base_floatfield
ios_base.badbit = _cisstParameterTypesPython.cvar.ios_base_badbit
ios_base.eofbit = _cisstParameterTypesPython.cvar.ios_base_eofbit
ios_base.failbit = _cisstParameterTypesPython.cvar.ios_base_failbit
ios_base.goodbit = _cisstParameterTypesPython.cvar.ios_base_goodbit
ios_base.app = _cisstParameterTypesPython.cvar.ios_base_app
ios_base.ate = _cisstParameterTypesPython.cvar.ios_base_ate
ios_base.binary = _cisstParameterTypesPython.cvar.ios_base_binary
ios_base.ios_base_in = _cisstParameterTypesPython.cvar.ios_base_ios_base_in
ios_base.out = _cisstParameterTypesPython.cvar.ios_base_out
ios_base.trunc = _cisstParameterTypesPython.cvar.ios_base_trunc
ios_base.beg = _cisstParameterTypesPython.cvar.ios_base_beg
ios_base.cur = _cisstParameterTypesPython.cvar.ios_base_cur
ios_base.end = _cisstParameterTypesPython.cvar.ios_base_end

def ios_base_sync_with_stdio(__sync=True):
    return _cisstParameterTypesPython.ios_base_sync_with_stdio(__sync)

def ios_base_xalloc():
    return _cisstParameterTypesPython.ios_base_xalloc()

class ios(ios_base):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def rdstate(self):
        return _cisstParameterTypesPython.ios_rdstate(self)

    def clear(self, *args):
        return _cisstParameterTypesPython.ios_clear(self, *args)

    def setstate(self, __state):
        return _cisstParameterTypesPython.ios_setstate(self, __state)

    def good(self):
        return _cisstParameterTypesPython.ios_good(self)

    def eof(self):
        return _cisstParameterTypesPython.ios_eof(self)

    def fail(self):
        return _cisstParameterTypesPython.ios_fail(self)

    def bad(self):
        return _cisstParameterTypesPython.ios_bad(self)

    def exceptions(self, *args):
        return _cisstParameterTypesPython.ios_exceptions(self, *args)

    def __init__(self, __sb):
        _cisstParameterTypesPython.ios_swiginit(self, _cisstParameterTypesPython.new_ios(__sb))
    __swig_destroy__ = _cisstParameterTypesPython.delete_ios

    def tie(self, *args):
        return _cisstParameterTypesPython.ios_tie(self, *args)

    def rdbuf(self, *args):
        return _cisstParameterTypesPython.ios_rdbuf(self, *args)

    def copyfmt(self, __rhs):
        return _cisstParameterTypesPython.ios_copyfmt(self, __rhs)

    def fill(self, *args):
        return _cisstParameterTypesPython.ios_fill(self, *args)

    def imbue(self, __loc):
        return _cisstParameterTypesPython.ios_imbue(self, __loc)

    def narrow(self, __c, __dfault):
        return _cisstParameterTypesPython.ios_narrow(self, __c, __dfault)

    def widen(self, __c):
        return _cisstParameterTypesPython.ios_widen(self, __c)

# Register ios in _cisstParameterTypesPython:
_cisstParameterTypesPython.ios_swigregister(ios)

class streambuf(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_streambuf

    def pubimbue(self, __loc):
        return _cisstParameterTypesPython.streambuf_pubimbue(self, __loc)

    def getloc(self):
        return _cisstParameterTypesPython.streambuf_getloc(self)

    def pubsetbuf(self, __s, __n):
        return _cisstParameterTypesPython.streambuf_pubsetbuf(self, __s, __n)

    def pubseekoff(self, *args):
        return _cisstParameterTypesPython.streambuf_pubseekoff(self, *args)

    def pubseekpos(self, *args):
        return _cisstParameterTypesPython.streambuf_pubseekpos(self, *args)

    def pubsync(self):
        return _cisstParameterTypesPython.streambuf_pubsync(self)

    def in_avail(self):
        return _cisstParameterTypesPython.streambuf_in_avail(self)

    def snextc(self):
        return _cisstParameterTypesPython.streambuf_snextc(self)

    def sbumpc(self):
        return _cisstParameterTypesPython.streambuf_sbumpc(self)

    def sgetc(self):
        return _cisstParameterTypesPython.streambuf_sgetc(self)

    def sgetn(self, __s, __n):
        return _cisstParameterTypesPython.streambuf_sgetn(self, __s, __n)

    def sputbackc(self, __c):
        return _cisstParameterTypesPython.streambuf_sputbackc(self, __c)

    def sungetc(self):
        return _cisstParameterTypesPython.streambuf_sungetc(self)

    def sputc(self, __c):
        return _cisstParameterTypesPython.streambuf_sputc(self, __c)

    def sputn(self, __s, __n):
        return _cisstParameterTypesPython.streambuf_sputn(self, __s, __n)

# Register streambuf in _cisstParameterTypesPython:
_cisstParameterTypesPython.streambuf_swigregister(streambuf)

class ostream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _cisstParameterTypesPython.ostream_swiginit(self, _cisstParameterTypesPython.new_ostream(__sb))
    __swig_destroy__ = _cisstParameterTypesPython.delete_ostream

    def __lshift__(self, *args):
        return _cisstParameterTypesPython.ostream___lshift__(self, *args)

    def put(self, __c):
        return _cisstParameterTypesPython.ostream_put(self, __c)

    def write(self, __s, __n):
        return _cisstParameterTypesPython.ostream_write(self, __s, __n)

    def flush(self):
        return _cisstParameterTypesPython.ostream_flush(self)

    def tellp(self):
        return _cisstParameterTypesPython.ostream_tellp(self)

    def seekp(self, *args):
        return _cisstParameterTypesPython.ostream_seekp(self, *args)

# Register ostream in _cisstParameterTypesPython:
_cisstParameterTypesPython.ostream_swigregister(ostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

class istream(ios):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _cisstParameterTypesPython.istream_swiginit(self, _cisstParameterTypesPython.new_istream(__sb))
    __swig_destroy__ = _cisstParameterTypesPython.delete_istream

    def __rshift__(self, *args):
        return _cisstParameterTypesPython.istream___rshift__(self, *args)

    def gcount(self):
        return _cisstParameterTypesPython.istream_gcount(self)

    def get(self, *args):
        return _cisstParameterTypesPython.istream_get(self, *args)

    def getline(self, *args):
        return _cisstParameterTypesPython.istream_getline(self, *args)

    def ignore(self, *args):
        return _cisstParameterTypesPython.istream_ignore(self, *args)

    def peek(self):
        return _cisstParameterTypesPython.istream_peek(self)

    def read(self, __s, __n):
        return _cisstParameterTypesPython.istream_read(self, __s, __n)

    def readsome(self, __s, __n):
        return _cisstParameterTypesPython.istream_readsome(self, __s, __n)

    def putback(self, __c):
        return _cisstParameterTypesPython.istream_putback(self, __c)

    def unget(self):
        return _cisstParameterTypesPython.istream_unget(self)

    def sync(self):
        return _cisstParameterTypesPython.istream_sync(self)

    def tellg(self):
        return _cisstParameterTypesPython.istream_tellg(self)

    def seekg(self, *args):
        return _cisstParameterTypesPython.istream_seekg(self, *args)

# Register istream in _cisstParameterTypesPython:
_cisstParameterTypesPython.istream_swigregister(istream)

class iostream(istream, ostream):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, __sb):
        _cisstParameterTypesPython.iostream_swiginit(self, _cisstParameterTypesPython.new_iostream(__sb))
    __swig_destroy__ = _cisstParameterTypesPython.delete_iostream

# Register iostream in _cisstParameterTypesPython:
_cisstParameterTypesPython.iostream_swigregister(iostream)

endl_cb_ptr = _cisstParameterTypesPython.endl_cb_ptr
endl = _cisstParameterTypesPython.endl
ends_cb_ptr = _cisstParameterTypesPython.ends_cb_ptr
ends = _cisstParameterTypesPython.ends
flush_cb_ptr = _cisstParameterTypesPython.flush_cb_ptr
flush = _cisstParameterTypesPython.flush
import cisstCommonPython
import cisstVectorPython
import cisstMultiTaskPython
import cisstOSAbstractionPython
class prmMotionBase(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmMotionBase class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmMotionBase

    def SetBaseParameter(self, blockingFlag, blendingFactor, timeLimit, isPreemptable, isCoordinated, isGoalOnly):
        r"""SetBaseParameter(prmMotionBase self, prmBlocking const & blockingFlag, bool const & blendingFactor, double const & timeLimit, bool const & isPreemptable, bool const & isCoordinated, bool const & isGoalOnly)"""
        return _cisstParameterTypesPython.prmMotionBase_SetBaseParameter(self, blockingFlag, blendingFactor, timeLimit, isPreemptable, isCoordinated, isGoalOnly)

    def SetBlockingFlag(self, newValue):
        r"""SetBlockingFlag(prmMotionBase self, prmBlocking const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetBlockingFlag(self, newValue)

    def BlockingFlag(self, *args):
        r"""
        BlockingFlag(prmMotionBase self) -> prmBlocking const
        BlockingFlag(prmMotionBase self) -> prmBlocking &
        """
        return _cisstParameterTypesPython.prmMotionBase_BlockingFlag(self, *args)

    def GetBlockingFlag(self, *args):
        r"""
        GetBlockingFlag(prmMotionBase self, prmBlocking & placeHolder)
        GetBlockingFlag(prmMotionBase self) -> prmBlocking const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetBlockingFlag(self, *args)

    def SetBlendingFactor(self, newValue):
        r"""SetBlendingFactor(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetBlendingFactor(self, newValue)

    def BlendingFactor(self, *args):
        r"""
        BlendingFactor(prmMotionBase self) -> bool const
        BlendingFactor(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_BlendingFactor(self, *args)

    def GetBlendingFactor(self, *args):
        r"""
        GetBlendingFactor(prmMotionBase self, bool & placeHolder)
        GetBlendingFactor(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetBlendingFactor(self, *args)

    def SetTimeLimit(self, newValue):
        r"""SetTimeLimit(prmMotionBase self, double const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetTimeLimit(self, newValue)

    def TimeLimit(self, *args):
        r"""
        TimeLimit(prmMotionBase self) -> double const
        TimeLimit(prmMotionBase self) -> double &
        """
        return _cisstParameterTypesPython.prmMotionBase_TimeLimit(self, *args)

    def GetTimeLimit(self, *args):
        r"""
        GetTimeLimit(prmMotionBase self, double & placeHolder)
        GetTimeLimit(prmMotionBase self) -> double const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetTimeLimit(self, *args)

    def SetIsPreemptable(self, newValue):
        r"""SetIsPreemptable(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsPreemptable(self, newValue)

    def IsPreemptable(self, *args):
        r"""
        IsPreemptable(prmMotionBase self) -> bool const
        IsPreemptable(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsPreemptable(self, *args)

    def GetIsPreemptable(self, *args):
        r"""
        GetIsPreemptable(prmMotionBase self, bool & placeHolder)
        GetIsPreemptable(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsPreemptable(self, *args)

    def SetIsCoordinated(self, newValue):
        r"""SetIsCoordinated(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsCoordinated(self, newValue)

    def IsCoordinated(self, *args):
        r"""
        IsCoordinated(prmMotionBase self) -> bool const
        IsCoordinated(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsCoordinated(self, *args)

    def GetIsCoordinated(self, *args):
        r"""
        GetIsCoordinated(prmMotionBase self, bool & placeHolder)
        GetIsCoordinated(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsCoordinated(self, *args)

    def SetIsGoalOnly(self, newValue):
        r"""SetIsGoalOnly(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsGoalOnly(self, newValue)

    def IsGoalOnly(self, *args):
        r"""
        IsGoalOnly(prmMotionBase self) -> bool const
        IsGoalOnly(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsGoalOnly(self, *args)

    def GetIsGoalOnly(self, *args):
        r"""
        GetIsGoalOnly(prmMotionBase self, bool & placeHolder)
        GetIsGoalOnly(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsGoalOnly(self, *args)

# Register prmMotionBase in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmMotionBase_swigregister(prmMotionBase)

class prmEventButton(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmEventButton class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmEventButton_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmEventButton_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmEventButton_ClassServices()
    PRESSED = _cisstParameterTypesPython.prmEventButton_PRESSED
    
    RELEASED = _cisstParameterTypesPython.prmEventButton_RELEASED
    
    CLICKED = _cisstParameterTypesPython.prmEventButton_CLICKED
    
    DOUBLE_CLICKED = _cisstParameterTypesPython.prmEventButton_DOUBLE_CLICKED
    
    UNDEFINED = _cisstParameterTypesPython.prmEventButton_UNDEFINED
    

    def __init__(self, *args):
        r"""
        __init__(prmEventButton self) -> prmEventButton
        __init__(prmEventButton self, prmEventButton::EventType const & type) -> prmEventButton
        __init__(prmEventButton self, prmEventButton other) -> prmEventButton
        """
        _cisstParameterTypesPython.prmEventButton_swiginit(self, _cisstParameterTypesPython.new_prmEventButton(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmEventButton

    def SetType(self, newValue):
        r"""SetType(prmEventButton self, prmEventButton::EventType const & newValue)"""
        return _cisstParameterTypesPython.prmEventButton_SetType(self, newValue)

    def Type(self, *args):
        r"""
        Type(prmEventButton self) -> prmEventButton::EventType const
        Type(prmEventButton self) -> prmEventButton::EventType &
        """
        return _cisstParameterTypesPython.prmEventButton_Type(self, *args)

    def GetType(self, *args):
        r"""
        GetType(prmEventButton self, prmEventButton::EventType & placeHolder)
        GetType(prmEventButton self) -> prmEventButton::EventType const &
        """
        return _cisstParameterTypesPython.prmEventButton_GetType(self, *args)

# Register prmEventButton in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmEventButton_swigregister(prmEventButton)

def prmEventButton_ClassServices():
    r"""prmEventButton_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmEventButton_ClassServices()

class prmPositionCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmPositionCartesianGet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmPositionCartesianGet self) -> prmPositionCartesianGet
        __init__(prmPositionCartesianGet self, prmPositionCartesianGet other) -> prmPositionCartesianGet
        """
        _cisstParameterTypesPython.prmPositionCartesianGet_swiginit(self, _cisstParameterTypesPython.new_prmPositionCartesianGet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionCartesianGet

    def GetMovingFrame(self, placeHolder):
        r"""GetMovingFrame(prmPositionCartesianGet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetMovingFrame(self, placeHolder)

    def SetMovingFrame(self, newValue):
        r"""SetMovingFrame(prmPositionCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetMovingFrame(self, newValue)

    def MovingFrame(self, *args):
        r"""
        MovingFrame(prmPositionCartesianGet self) -> std::string const
        MovingFrame(prmPositionCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_MovingFrame(self, *args)

    def GetReferenceFrame(self, placeHolder):
        r"""GetReferenceFrame(prmPositionCartesianGet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetReferenceFrame(self, placeHolder)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmPositionCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmPositionCartesianGet self) -> std::string const
        ReferenceFrame(prmPositionCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_ReferenceFrame(self, *args)

    def GetPosition(self, placeHolder):
        r"""GetPosition(prmPositionCartesianGet self, vctFrm3 placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetPosition(self, placeHolder)

    def SetPosition(self, newValue):
        r"""SetPosition(prmPositionCartesianGet self, vctFrm3 newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetPosition(self, newValue)

    def Position(self, *args):
        r"""
        Position(prmPositionCartesianGet self) -> vctFrm3
        Position(prmPositionCartesianGet self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_Position(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionCartesianGet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmPositionCartesianGet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_ClassServices()

    def Copy(self, source):
        r"""Copy(prmPositionCartesianGet self, prmPositionCartesianGet source)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmPositionCartesianGet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmPositionCartesianGet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmPositionCartesianGet self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmPositionCartesianGet self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmPositionCartesianGet self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmPositionCartesianGet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianGet___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmPositionCartesianGet self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_ScalarDescription(self, *args)

# Register prmPositionCartesianGet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmPositionCartesianGet_swigregister(prmPositionCartesianGet)

def prmPositionCartesianGet_ClassServices():
    r"""prmPositionCartesianGet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmPositionCartesianGet_ClassServices()

class prmPositionCartesianSet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmPositionCartesianSet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmPositionCartesianSet self) -> prmPositionCartesianSet
        __init__(prmPositionCartesianSet self, prmPositionCartesianSet other) -> prmPositionCartesianSet
        """
        _cisstParameterTypesPython.prmPositionCartesianSet_swiginit(self, _cisstParameterTypesPython.new_prmPositionCartesianSet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionCartesianSet

    def GetGoal(self, placeHolder):
        r"""GetGoal(prmPositionCartesianSet self, vctFrm3 placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetGoal(self, placeHolder)

    def SetGoal(self, newValue):
        r"""SetGoal(prmPositionCartesianSet self, vctFrm3 newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetGoal(self, newValue)

    def Goal(self, *args):
        r"""
        Goal(prmPositionCartesianSet self) -> vctFrm3
        Goal(prmPositionCartesianSet self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_Goal(self, *args)

    def GetVelocity(self, placeHolder):
        r"""GetVelocity(prmPositionCartesianSet self, vctDouble3 & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetVelocity(self, placeHolder)

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmPositionCartesianSet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetVelocity(self, newValue)

    def Velocity(self, *args):
        r"""
        Velocity(prmPositionCartesianSet self) -> vctDouble3 const
        Velocity(prmPositionCartesianSet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_Velocity(self, *args)

    def GetVelocityAngular(self, placeHolder):
        r"""GetVelocityAngular(prmPositionCartesianSet self, vctDouble3 & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetVelocityAngular(self, placeHolder)

    def SetVelocityAngular(self, newValue):
        r"""SetVelocityAngular(prmPositionCartesianSet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetVelocityAngular(self, newValue)

    def VelocityAngular(self, *args):
        r"""
        VelocityAngular(prmPositionCartesianSet self) -> vctDouble3 const
        VelocityAngular(prmPositionCartesianSet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_VelocityAngular(self, *args)

    def GetAcceleration(self, placeHolder):
        r"""GetAcceleration(prmPositionCartesianSet self, vctDouble3 & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetAcceleration(self, placeHolder)

    def SetAcceleration(self, newValue):
        r"""SetAcceleration(prmPositionCartesianSet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetAcceleration(self, newValue)

    def Acceleration(self, *args):
        r"""
        Acceleration(prmPositionCartesianSet self) -> vctDouble3 const
        Acceleration(prmPositionCartesianSet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_Acceleration(self, *args)

    def GetAngularAcceleration(self, placeHolder):
        r"""GetAngularAcceleration(prmPositionCartesianSet self, vctDouble3 & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetAngularAcceleration(self, placeHolder)

    def SetAngularAcceleration(self, newValue):
        r"""SetAngularAcceleration(prmPositionCartesianSet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetAngularAcceleration(self, newValue)

    def AngularAcceleration(self, *args):
        r"""
        AngularAcceleration(prmPositionCartesianSet self) -> vctDouble3 const
        AngularAcceleration(prmPositionCartesianSet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_AngularAcceleration(self, *args)

    def GetMask(self, placeHolder):
        r"""GetMask(prmPositionCartesianSet self, vctBool2 & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetMask(self, placeHolder)

    def SetMask(self, newValue):
        r"""SetMask(prmPositionCartesianSet self, vctBool2 const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetMask(self, newValue)

    def Mask(self, *args):
        r"""
        Mask(prmPositionCartesianSet self) -> vctBool2 const
        Mask(prmPositionCartesianSet self) -> vctBool2 &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_Mask(self, *args)

    def GetMovingFrame(self, placeHolder):
        r"""GetMovingFrame(prmPositionCartesianSet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetMovingFrame(self, placeHolder)

    def SetMovingFrame(self, newValue):
        r"""SetMovingFrame(prmPositionCartesianSet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetMovingFrame(self, newValue)

    def MovingFrame(self, *args):
        r"""
        MovingFrame(prmPositionCartesianSet self) -> std::string const
        MovingFrame(prmPositionCartesianSet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_MovingFrame(self, *args)

    def GetReferenceFrame(self, placeHolder):
        r"""GetReferenceFrame(prmPositionCartesianSet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetReferenceFrame(self, placeHolder)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmPositionCartesianSet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmPositionCartesianSet self) -> std::string const
        ReferenceFrame(prmPositionCartesianSet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_ReferenceFrame(self, *args)

    def GetBlockingFlag(self, placeHolder):
        r"""GetBlockingFlag(prmPositionCartesianSet self, prmBlocking & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetBlockingFlag(self, placeHolder)

    def SetBlockingFlag(self, newValue):
        r"""SetBlockingFlag(prmPositionCartesianSet self, prmBlocking const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetBlockingFlag(self, newValue)

    def BlockingFlag(self, *args):
        r"""
        BlockingFlag(prmPositionCartesianSet self) -> prmBlocking const
        BlockingFlag(prmPositionCartesianSet self) -> prmBlocking &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_BlockingFlag(self, *args)

    def GetBlendingFactor(self, placeHolder):
        r"""GetBlendingFactor(prmPositionCartesianSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetBlendingFactor(self, placeHolder)

    def SetBlendingFactor(self, newValue):
        r"""SetBlendingFactor(prmPositionCartesianSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetBlendingFactor(self, newValue)

    def BlendingFactor(self, *args):
        r"""
        BlendingFactor(prmPositionCartesianSet self) -> bool const
        BlendingFactor(prmPositionCartesianSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_BlendingFactor(self, *args)

    def GetIsPreemptable(self, placeHolder):
        r"""GetIsPreemptable(prmPositionCartesianSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetIsPreemptable(self, placeHolder)

    def SetIsPreemptable(self, newValue):
        r"""SetIsPreemptable(prmPositionCartesianSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetIsPreemptable(self, newValue)

    def IsPreemptable(self, *args):
        r"""
        IsPreemptable(prmPositionCartesianSet self) -> bool const
        IsPreemptable(prmPositionCartesianSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_IsPreemptable(self, *args)

    def GetIsGoalOnly(self, placeHolder):
        r"""GetIsGoalOnly(prmPositionCartesianSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetIsGoalOnly(self, placeHolder)

    def SetIsGoalOnly(self, newValue):
        r"""SetIsGoalOnly(prmPositionCartesianSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetIsGoalOnly(self, newValue)

    def IsGoalOnly(self, *args):
        r"""
        IsGoalOnly(prmPositionCartesianSet self) -> bool const
        IsGoalOnly(prmPositionCartesianSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_IsGoalOnly(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionCartesianSet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmPositionCartesianSet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_ClassServices()

    def Copy(self, source):
        r"""Copy(prmPositionCartesianSet self, prmPositionCartesianSet source)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmPositionCartesianSet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmPositionCartesianSet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmPositionCartesianSet self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmPositionCartesianSet self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmPositionCartesianSet self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmPositionCartesianSet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianSet___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmPositionCartesianSet self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_ScalarDescription(self, *args)

# Register prmPositionCartesianSet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmPositionCartesianSet_swigregister(prmPositionCartesianSet)

def prmPositionCartesianSet_ClassServices():
    r"""prmPositionCartesianSet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmPositionCartesianSet_ClassServices()

class prmVelocityCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmVelocityCartesianGet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmVelocityCartesianGet self) -> prmVelocityCartesianGet
        __init__(prmVelocityCartesianGet self, prmVelocityCartesianGet other) -> prmVelocityCartesianGet
        """
        _cisstParameterTypesPython.prmVelocityCartesianGet_swiginit(self, _cisstParameterTypesPython.new_prmVelocityCartesianGet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityCartesianGet

    def GetVelocityLinear(self, placeHolder):
        r"""GetVelocityLinear(prmVelocityCartesianGet self, vct3 & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocityLinear(self, placeHolder)

    def SetVelocityLinear(self, newValue):
        r"""SetVelocityLinear(prmVelocityCartesianGet self, vct3 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocityLinear(self, newValue)

    def VelocityLinear(self, *args):
        r"""
        VelocityLinear(prmVelocityCartesianGet self) -> vct3 const
        VelocityLinear(prmVelocityCartesianGet self) -> vct3 &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_VelocityLinear(self, *args)

    def GetVelocityAngular(self, placeHolder):
        r"""GetVelocityAngular(prmVelocityCartesianGet self, vct3 & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocityAngular(self, placeHolder)

    def SetVelocityAngular(self, newValue):
        r"""SetVelocityAngular(prmVelocityCartesianGet self, vct3 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocityAngular(self, newValue)

    def VelocityAngular(self, *args):
        r"""
        VelocityAngular(prmVelocityCartesianGet self) -> vct3 const
        VelocityAngular(prmVelocityCartesianGet self) -> vct3 &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_VelocityAngular(self, *args)

    def GetMovingFrame(self, placeHolder):
        r"""GetMovingFrame(prmVelocityCartesianGet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetMovingFrame(self, placeHolder)

    def SetMovingFrame(self, newValue):
        r"""SetMovingFrame(prmVelocityCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetMovingFrame(self, newValue)

    def MovingFrame(self, *args):
        r"""
        MovingFrame(prmVelocityCartesianGet self) -> std::string const
        MovingFrame(prmVelocityCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_MovingFrame(self, *args)

    def GetReferenceFrame(self, placeHolder):
        r"""GetReferenceFrame(prmVelocityCartesianGet self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetReferenceFrame(self, placeHolder)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmVelocityCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmVelocityCartesianGet self) -> std::string const
        ReferenceFrame(prmVelocityCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_ReferenceFrame(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityCartesianGet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmVelocityCartesianGet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_ClassServices()

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmVelocityCartesianGet self, vct6 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocity(self, newValue)

    def GetVelocity(self, placeHolder):
        r"""GetVelocity(prmVelocityCartesianGet self, vct6 & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocity(self, placeHolder)

    def Copy(self, source):
        r"""Copy(prmVelocityCartesianGet self, prmVelocityCartesianGet source)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmVelocityCartesianGet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmVelocityCartesianGet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmVelocityCartesianGet self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmVelocityCartesianGet self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmVelocityCartesianGet self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmVelocityCartesianGet self) -> std::string"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmVelocityCartesianGet self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_ScalarDescription(self, *args)

# Register prmVelocityCartesianGet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmVelocityCartesianGet_swigregister(prmVelocityCartesianGet)

def prmVelocityCartesianGet_ClassServices():
    r"""prmVelocityCartesianGet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmVelocityCartesianGet_ClassServices()

class prmVelocityCartesianSet(prmMotionBase):
    r"""Proxy of C++ prmVelocityCartesianSet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityCartesianSet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmVelocityCartesianSet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_ClassServices()

    def __init__(self, *args):
        r"""
        __init__(prmVelocityCartesianSet self) -> prmVelocityCartesianSet
        __init__(prmVelocityCartesianSet self, vctDouble3 const & velocity, vctDouble3 const & velocityAngular, vctDouble3 const & acceleration, vctDouble3 const & accelerationAngular, vctBool6 const & mask) -> prmVelocityCartesianSet
        """
        _cisstParameterTypesPython.prmVelocityCartesianSet_swiginit(self, _cisstParameterTypesPython.new_prmVelocityCartesianSet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityCartesianSet

    def SetGoal(self, velocities):
        r"""SetGoal(prmVelocityCartesianSet self, vctDouble6 const & velocities)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetGoal(self, velocities)

    def SetTranslationGoal(self, velocity):
        r"""SetTranslationGoal(prmVelocityCartesianSet self, vctDouble3 const & velocity)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetTranslationGoal(self, velocity)

    def SetRotationGoal(self, velocityAngular):
        r"""SetRotationGoal(prmVelocityCartesianSet self, vctDouble3 const & velocityAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetRotationGoal(self, velocityAngular)

    def GetGoal(self):
        r"""GetGoal(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetGoal(self)

    def SetVelocity(self, velocity):
        r"""SetVelocity(prmVelocityCartesianSet self, vctDouble3 const & velocity)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetVelocity(self, velocity)

    def GetVelocity(self):
        r"""GetVelocity(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetVelocity(self)

    def SetAngularVelocity(self, velocityAngular):
        r"""SetAngularVelocity(prmVelocityCartesianSet self, vctDouble3 const & velocityAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAngularVelocity(self, velocityAngular)

    def GetAngularVelocity(self):
        r"""GetAngularVelocity(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAngularVelocity(self)

    def SetAcceleration(self, acceleration):
        r"""SetAcceleration(prmVelocityCartesianSet self, vctDouble3 const & acceleration)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAcceleration(self, acceleration)

    def GetAcceleration(self):
        r"""GetAcceleration(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAcceleration(self)

    def SetAngularAcceleration(self, accelerationAngular):
        r"""SetAngularAcceleration(prmVelocityCartesianSet self, vctDouble3 const & accelerationAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAngularAcceleration(self, accelerationAngular)

    def GetAngularAcceleration(self):
        r"""GetAngularAcceleration(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAngularAcceleration(self)

    def SetMask(self, mask):
        r"""SetMask(prmVelocityCartesianSet self, vctBool6 const & mask)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetMask(self, mask)

    def GetMask(self):
        r"""GetMask(prmVelocityCartesianSet self) -> vctBool6"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetMask(self)

# Register prmVelocityCartesianSet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmVelocityCartesianSet_swigregister(prmVelocityCartesianSet)

def prmVelocityCartesianSet_ClassServices():
    r"""prmVelocityCartesianSet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmVelocityCartesianSet_ClassServices()

class prmForceCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmForceCartesianGet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmForceCartesianGet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmForceCartesianGet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmForceCartesianGet_ClassServices()

    def __init__(self, *args):
        r"""
        __init__(prmForceCartesianGet self) -> prmForceCartesianGet
        __init__(prmForceCartesianGet self, vctDouble6 const & force) -> prmForceCartesianGet
        """
        _cisstParameterTypesPython.prmForceCartesianGet_swiginit(self, _cisstParameterTypesPython.new_prmForceCartesianGet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmForceCartesianGet

    def SetForce(self, newValue):
        r"""SetForce(prmForceCartesianGet self, vctDouble6 const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetForce(self, newValue)

    def Force(self, *args):
        r"""
        Force(prmForceCartesianGet self) -> vctDouble6 const
        Force(prmForceCartesianGet self) -> vctDouble6 &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_Force(self, *args)

    def GetForce(self, *args):
        r"""
        GetForce(prmForceCartesianGet self, vctDouble6 & placeHolder)
        GetForce(prmForceCartesianGet self) -> vctDouble6 const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetForce(self, *args)

    def SetMask(self, newValue):
        r"""SetMask(prmForceCartesianGet self, vctBool6 const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetMask(self, newValue)

    def Mask(self, *args):
        r"""
        Mask(prmForceCartesianGet self) -> vctBool6 const
        Mask(prmForceCartesianGet self) -> vctBool6 &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_Mask(self, *args)

    def GetMask(self, *args):
        r"""
        GetMask(prmForceCartesianGet self, vctBool6 & placeHolder)
        GetMask(prmForceCartesianGet self) -> vctBool6 const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetMask(self, *args)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmForceCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmForceCartesianGet self) -> std::string const
        ReferenceFrame(prmForceCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_ReferenceFrame(self, *args)

    def GetReferenceFrame(self, *args):
        r"""
        GetReferenceFrame(prmForceCartesianGet self, std::string & placeHolder)
        GetReferenceFrame(prmForceCartesianGet self) -> std::string const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetReferenceFrame(self, *args)

    def SetMovingFrame(self, newValue):
        r"""SetMovingFrame(prmForceCartesianGet self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetMovingFrame(self, newValue)

    def MovingFrame(self, *args):
        r"""
        MovingFrame(prmForceCartesianGet self) -> std::string const
        MovingFrame(prmForceCartesianGet self) -> std::string &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_MovingFrame(self, *args)

    def GetMovingFrame(self, *args):
        r"""
        GetMovingFrame(prmForceCartesianGet self, std::string & placeHolder)
        GetMovingFrame(prmForceCartesianGet self) -> std::string const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetMovingFrame(self, *args)

    def F(self, *args):
        r"""
        F(prmForceCartesianGet self) -> prmForceCartesianGet::ConstForceType
        F(prmForceCartesianGet self) -> prmForceCartesianGet::ForceType
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_F(self, *args)

    def T(self, *args):
        r"""
        T(prmForceCartesianGet self) -> prmForceCartesianGet::ConstTorqueType
        T(prmForceCartesianGet self) -> prmForceCartesianGet::TorqueType
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_T(self, *args)

# Register prmForceCartesianGet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmForceCartesianGet_swigregister(prmForceCartesianGet)

def prmForceCartesianGet_ClassServices():
    r"""prmForceCartesianGet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmForceCartesianGet_ClassServices()

class prmForceCartesianSet(prmMotionBase):
    r"""Proxy of C++ prmForceCartesianSet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmForceCartesianSet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmForceCartesianSet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmForceCartesianSet_ClassServices()

    def SetForce(self, newValue):
        r"""SetForce(prmForceCartesianSet self, prmForceCartesianSet::ForceType const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetForce(self, newValue)

    def Force(self, *args):
        r"""
        Force(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType const
        Force(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_Force(self, *args)

    def GetForce(self, *args):
        r"""
        GetForce(prmForceCartesianSet self, prmForceCartesianSet::ForceType & placeHolder)
        GetForce(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType const &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_GetForce(self, *args)

    def SetMask(self, newValue):
        r"""SetMask(prmForceCartesianSet self, prmForceCartesianSet::MaskType const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetMask(self, newValue)

    def Mask(self, *args):
        r"""
        Mask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType const
        Mask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_Mask(self, *args)

    def GetMask(self, *args):
        r"""
        GetMask(prmForceCartesianSet self, prmForceCartesianSet::MaskType & placeHolder)
        GetMask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType const &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_GetMask(self, *args)

    def __init__(self, *args):
        r"""
        __init__(prmForceCartesianSet self) -> prmForceCartesianSet
        __init__(prmForceCartesianSet self, prmForceCartesianSet::ForceType const & force, prmForceCartesianSet::MaskType const & mask) -> prmForceCartesianSet
        """
        _cisstParameterTypesPython.prmForceCartesianSet_swiginit(self, _cisstParameterTypesPython.new_prmForceCartesianSet(*args))

    def SetAll(self, forceSet, mask):
        r"""SetAll(prmForceCartesianSet self, double forceSet, bool mask)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetAll(self, forceSet, mask)
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmForceCartesianSet

# Register prmForceCartesianSet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmForceCartesianSet_swigregister(prmForceCartesianSet)

def prmForceCartesianSet_ClassServices():
    r"""prmForceCartesianSet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmForceCartesianSet_ClassServices()

class prmPositionJointGet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmPositionJointGet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionJointGet

    def GetPosition(self, placeHolder):
        r"""GetPosition(prmPositionJointGet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointGet_GetPosition(self, placeHolder)

    def SetPosition(self, newValue):
        r"""SetPosition(prmPositionJointGet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetPosition(self, newValue)

    def Position(self, *args):
        r"""
        Position(prmPositionJointGet self) -> vctDynamicVector< double > const
        Position(prmPositionJointGet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointGet_Position(self, *args)

    def GetTimestamps(self, placeHolder):
        r"""GetTimestamps(prmPositionJointGet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointGet_GetTimestamps(self, placeHolder)

    def SetTimestamps(self, newValue):
        r"""SetTimestamps(prmPositionJointGet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetTimestamps(self, newValue)

    def Timestamps(self, *args):
        r"""
        Timestamps(prmPositionJointGet self) -> vctDynamicVector< double > const
        Timestamps(prmPositionJointGet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointGet_Timestamps(self, *args)

    def __init__(self, *args):
        r"""
        __init__(prmPositionJointGet self) -> prmPositionJointGet
        __init__(prmPositionJointGet self, prmPositionJointGet other) -> prmPositionJointGet
        __init__(prmPositionJointGet self, size_t size) -> prmPositionJointGet
        """
        _cisstParameterTypesPython.prmPositionJointGet_swiginit(self, _cisstParameterTypesPython.new_prmPositionJointGet(*args))

    def SetSize(self, size):
        r"""SetSize(prmPositionJointGet self, size_t size)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetSize(self, size)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionJointGet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmPositionJointGet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionJointGet_ClassServices()

    def Copy(self, source):
        r"""Copy(prmPositionJointGet self, prmPositionJointGet source)"""
        return _cisstParameterTypesPython.prmPositionJointGet_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmPositionJointGet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmPositionJointGet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionJointGet_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmPositionJointGet self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmPositionJointGet self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmPositionJointGet self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionJointGet_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmPositionJointGet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointGet___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmPositionJointGet self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointGet_ScalarDescription(self, *args)

# Register prmPositionJointGet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmPositionJointGet_swigregister(prmPositionJointGet)

def prmPositionJointGet_ClassServices():
    r"""prmPositionJointGet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmPositionJointGet_ClassServices()

class prmPositionJointSet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmPositionJointSet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionJointSet

    def GetGoal(self, placeHolder):
        r"""GetGoal(prmPositionJointSet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetGoal(self, placeHolder)

    def SetGoal(self, newValue):
        r"""SetGoal(prmPositionJointSet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetGoal(self, newValue)

    def Goal(self, *args):
        r"""
        Goal(prmPositionJointSet self) -> vctDynamicVector< double > const
        Goal(prmPositionJointSet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Goal(self, *args)

    def GetVelocity(self, placeHolder):
        r"""GetVelocity(prmPositionJointSet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetVelocity(self, placeHolder)

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmPositionJointSet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetVelocity(self, newValue)

    def Velocity(self, *args):
        r"""
        Velocity(prmPositionJointSet self) -> vctDynamicVector< double > const
        Velocity(prmPositionJointSet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Velocity(self, *args)

    def GetAcceleration(self, placeHolder):
        r"""GetAcceleration(prmPositionJointSet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetAcceleration(self, placeHolder)

    def SetAcceleration(self, newValue):
        r"""SetAcceleration(prmPositionJointSet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetAcceleration(self, newValue)

    def Acceleration(self, *args):
        r"""
        Acceleration(prmPositionJointSet self) -> vctDynamicVector< double > const
        Acceleration(prmPositionJointSet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Acceleration(self, *args)

    def GetTimeLimit(self, placeHolder):
        r"""GetTimeLimit(prmPositionJointSet self, double & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetTimeLimit(self, placeHolder)

    def SetTimeLimit(self, newValue):
        r"""SetTimeLimit(prmPositionJointSet self, double const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetTimeLimit(self, newValue)

    def TimeLimit(self, *args):
        r"""
        TimeLimit(prmPositionJointSet self) -> double const
        TimeLimit(prmPositionJointSet self) -> double &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_TimeLimit(self, *args)

    def GetIsCoordinated(self, placeHolder):
        r"""GetIsCoordinated(prmPositionJointSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetIsCoordinated(self, placeHolder)

    def SetIsCoordinated(self, newValue):
        r"""SetIsCoordinated(prmPositionJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetIsCoordinated(self, newValue)

    def IsCoordinated(self, *args):
        r"""
        IsCoordinated(prmPositionJointSet self) -> bool const
        IsCoordinated(prmPositionJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_IsCoordinated(self, *args)

    def GetDeceleration(self, placeHolder):
        r"""GetDeceleration(prmPositionJointSet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetDeceleration(self, placeHolder)

    def SetDeceleration(self, newValue):
        r"""SetDeceleration(prmPositionJointSet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetDeceleration(self, newValue)

    def Deceleration(self, *args):
        r"""
        Deceleration(prmPositionJointSet self) -> vctDynamicVector< double > const
        Deceleration(prmPositionJointSet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Deceleration(self, *args)

    def GetMask(self, placeHolder):
        r"""GetMask(prmPositionJointSet self, vctDynamicVector< bool > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetMask(self, placeHolder)

    def SetMask(self, newValue):
        r"""SetMask(prmPositionJointSet self, vctDynamicVector< bool > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetMask(self, newValue)

    def Mask(self, *args):
        r"""
        Mask(prmPositionJointSet self) -> vctDynamicVector< bool > const
        Mask(prmPositionJointSet self) -> vctDynamicVector< bool > &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Mask(self, *args)

    def GetBlockingFlag(self, placeHolder):
        r"""GetBlockingFlag(prmPositionJointSet self, prmBlocking & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetBlockingFlag(self, placeHolder)

    def SetBlockingFlag(self, newValue):
        r"""SetBlockingFlag(prmPositionJointSet self, prmBlocking const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetBlockingFlag(self, newValue)

    def BlockingFlag(self, *args):
        r"""
        BlockingFlag(prmPositionJointSet self) -> prmBlocking const
        BlockingFlag(prmPositionJointSet self) -> prmBlocking &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_BlockingFlag(self, *args)

    def GetBlendingFactor(self, placeHolder):
        r"""GetBlendingFactor(prmPositionJointSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetBlendingFactor(self, placeHolder)

    def SetBlendingFactor(self, newValue):
        r"""SetBlendingFactor(prmPositionJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetBlendingFactor(self, newValue)

    def BlendingFactor(self, *args):
        r"""
        BlendingFactor(prmPositionJointSet self) -> bool const
        BlendingFactor(prmPositionJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_BlendingFactor(self, *args)

    def GetIsPreemptable(self, placeHolder):
        r"""GetIsPreemptable(prmPositionJointSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetIsPreemptable(self, placeHolder)

    def SetIsPreemptable(self, newValue):
        r"""SetIsPreemptable(prmPositionJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetIsPreemptable(self, newValue)

    def IsPreemptable(self, *args):
        r"""
        IsPreemptable(prmPositionJointSet self) -> bool const
        IsPreemptable(prmPositionJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_IsPreemptable(self, *args)

    def GetIsGoalOnly(self, placeHolder):
        r"""GetIsGoalOnly(prmPositionJointSet self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointSet_GetIsGoalOnly(self, placeHolder)

    def SetIsGoalOnly(self, newValue):
        r"""SetIsGoalOnly(prmPositionJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetIsGoalOnly(self, newValue)

    def IsGoalOnly(self, *args):
        r"""
        IsGoalOnly(prmPositionJointSet self) -> bool const
        IsGoalOnly(prmPositionJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_IsGoalOnly(self, *args)

    def __init__(self, *args):
        r"""
        __init__(prmPositionJointSet self) -> prmPositionJointSet
        __init__(prmPositionJointSet self, prmPositionJointSet other) -> prmPositionJointSet
        __init__(prmPositionJointSet self, size_t const size) -> prmPositionJointSet
        """
        _cisstParameterTypesPython.prmPositionJointSet_swiginit(self, _cisstParameterTypesPython.new_prmPositionJointSet(*args))

    def SetSize(self, size):
        r"""SetSize(prmPositionJointSet self, size_t const size)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetSize(self, size)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionJointSet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmPositionJointSet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionJointSet_ClassServices()

    def Copy(self, source):
        r"""Copy(prmPositionJointSet self, prmPositionJointSet source)"""
        return _cisstParameterTypesPython.prmPositionJointSet_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmPositionJointSet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmPositionJointSet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionJointSet_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmPositionJointSet self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionJointSet_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmPositionJointSet self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointSet_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmPositionJointSet self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmPositionJointSet_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmPositionJointSet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointSet___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmPositionJointSet self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointSet_ScalarDescription(self, *args)

# Register prmPositionJointSet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmPositionJointSet_swigregister(prmPositionJointSet)

def prmPositionJointSet_ClassServices():
    r"""prmPositionJointSet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmPositionJointSet_ClassServices()

class prmVelocityJointGet(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmVelocityJointGet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityJointGet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmVelocityJointGet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityJointGet_ClassServices()

    def SetSize(self, size):
        r"""SetSize(prmVelocityJointGet self, prmVelocityJointGet::size_type size)"""
        return _cisstParameterTypesPython.prmVelocityJointGet_SetSize(self, size)

    def __init__(self, *args):
        r"""
        __init__(prmVelocityJointGet self) -> prmVelocityJointGet
        __init__(prmVelocityJointGet self, prmVelocityJointGet::size_type size) -> prmVelocityJointGet
        __init__(prmVelocityJointGet self, vctDoubleVec const & velocity) -> prmVelocityJointGet
        """
        _cisstParameterTypesPython.prmVelocityJointGet_swiginit(self, _cisstParameterTypesPython.new_prmVelocityJointGet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityJointGet

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmVelocityJointGet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointGet_SetVelocity(self, newValue)

    def Velocity(self, *args):
        r"""
        Velocity(prmVelocityJointGet self) -> vctDoubleVec const
        Velocity(prmVelocityJointGet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointGet_Velocity(self, *args)

    def GetVelocity(self, *args):
        r"""
        GetVelocity(prmVelocityJointGet self, vctDoubleVec & placeHolder)
        GetVelocity(prmVelocityJointGet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointGet_GetVelocity(self, *args)

# Register prmVelocityJointGet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmVelocityJointGet_swigregister(prmVelocityJointGet)

def prmVelocityJointGet_ClassServices():
    r"""prmVelocityJointGet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmVelocityJointGet_ClassServices()

class prmVelocityJointSet(prmMotionBase):
    r"""Proxy of C++ prmVelocityJointSet class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityJointSet_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmVelocityJointSet_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityJointSet_ClassServices()

    def SetMask(self, newValue):
        r"""SetMask(prmVelocityJointSet self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetMask(self, newValue)

    def Mask(self, *args):
        r"""
        Mask(prmVelocityJointSet self) -> vctBoolVec const
        Mask(prmVelocityJointSet self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Mask(self, *args)

    def GetMask(self, *args):
        r"""
        GetMask(prmVelocityJointSet self, vctBoolVec & placeHolder)
        GetMask(prmVelocityJointSet self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetMask(self, *args)

    def SetGuard(self, newValue):
        r"""SetGuard(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetGuard(self, newValue)

    def Guard(self, *args):
        r"""
        Guard(prmVelocityJointSet self) -> vctDoubleVec const
        Guard(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Guard(self, *args)

    def GetGuard(self, *args):
        r"""
        GetGuard(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetGuard(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetGuard(self, *args)

    def SetGoal(self, newValue):
        r"""SetGoal(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetGoal(self, newValue)

    def Goal(self, *args):
        r"""
        Goal(prmVelocityJointSet self) -> vctDoubleVec const
        Goal(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Goal(self, *args)

    def GetGoal(self, *args):
        r"""
        GetGoal(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetGoal(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetGoal(self, *args)

    def SetAcceleration(self, newValue):
        r"""SetAcceleration(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetAcceleration(self, newValue)

    def Acceleration(self, *args):
        r"""
        Acceleration(prmVelocityJointSet self) -> vctDoubleVec const
        Acceleration(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Acceleration(self, *args)

    def GetAcceleration(self, *args):
        r"""
        GetAcceleration(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetAcceleration(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetAcceleration(self, *args)

    def SetDeceleration(self, newValue):
        r"""SetDeceleration(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetDeceleration(self, newValue)

    def Deceleration(self, *args):
        r"""
        Deceleration(prmVelocityJointSet self) -> vctDoubleVec const
        Deceleration(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Deceleration(self, *args)

    def GetDeceleration(self, *args):
        r"""
        GetDeceleration(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetDeceleration(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetDeceleration(self, *args)

    def SetIsPositionGuarded(self, newValue):
        r"""SetIsPositionGuarded(prmVelocityJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetIsPositionGuarded(self, newValue)

    def IsPositionGuarded(self, *args):
        r"""
        IsPositionGuarded(prmVelocityJointSet self) -> bool const
        IsPositionGuarded(prmVelocityJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_IsPositionGuarded(self, *args)

    def GetIsPositionGuarded(self, *args):
        r"""
        GetIsPositionGuarded(prmVelocityJointSet self, bool & placeHolder)
        GetIsPositionGuarded(prmVelocityJointSet self) -> bool const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetIsPositionGuarded(self, *args)

    def SetSize(self, size):
        r"""SetSize(prmVelocityJointSet self, prmVelocityJointSet::size_type size)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetSize(self, size)

    def __init__(self, *args):
        r"""
        __init__(prmVelocityJointSet self) -> prmVelocityJointSet
        __init__(prmVelocityJointSet self, prmVelocityJointSet::size_type size) -> prmVelocityJointSet
        __init__(prmVelocityJointSet self, vctBoolVec const & mask, vctDoubleVec const & guard, vctDoubleVec const & velocity, vctDoubleVec const & acceleration, vctDoubleVec const & deceleration, bool const & isPositionGuarded) -> prmVelocityJointSet
        """
        _cisstParameterTypesPython.prmVelocityJointSet_swiginit(self, _cisstParameterTypesPython.new_prmVelocityJointSet(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityJointSet

# Register prmVelocityJointSet in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmVelocityJointSet_swigregister(prmVelocityJointSet)

def prmVelocityJointSet_ClassServices():
    r"""prmVelocityJointSet_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmVelocityJointSet_ClassServices()

class prmRobotState(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmRobotState class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmRobotState_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmRobotState_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmRobotState_ClassServices()

    def __init__(self, *args):
        r"""
        __init__(prmRobotState self) -> prmRobotState
        __init__(prmRobotState self, prmRobotState::size_type size) -> prmRobotState
        """
        _cisstParameterTypesPython.prmRobotState_swiginit(self, _cisstParameterTypesPython.new_prmRobotState(*args))

    def SetSize(self, size):
        r"""SetSize(prmRobotState self, prmRobotState::size_type size)"""
        return _cisstParameterTypesPython.prmRobotState_SetSize(self, size)
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmRobotState

    def SetJointName(self, newValue):
        r"""SetJointName(prmRobotState self, vctDynamicVector< std::string > const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointName(self, newValue)

    def JointName(self, *args):
        r"""
        JointName(prmRobotState self) -> vctDynamicVector< std::string > const
        JointName(prmRobotState self) -> vctDynamicVector< std::string > &
        """
        return _cisstParameterTypesPython.prmRobotState_JointName(self, *args)

    def GetJointName(self, *args):
        r"""
        GetJointName(prmRobotState self, vctDynamicVector< std::string > & placeHolder)
        GetJointName(prmRobotState self) -> vctDynamicVector< std::string > const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointName(self, *args)

    def SetJointPosition(self, newValue):
        r"""SetJointPosition(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPosition(self, newValue)

    def JointPosition(self, *args):
        r"""
        JointPosition(prmRobotState self) -> vctDoubleVec const
        JointPosition(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPosition(self, *args)

    def GetJointPosition(self, *args):
        r"""
        GetJointPosition(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPosition(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPosition(self, *args)

    def SetJointVelocity(self, newValue):
        r"""SetJointVelocity(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocity(self, newValue)

    def JointVelocity(self, *args):
        r"""
        JointVelocity(prmRobotState self) -> vctDoubleVec const
        JointVelocity(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocity(self, *args)

    def GetJointVelocity(self, *args):
        r"""
        GetJointVelocity(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocity(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocity(self, *args)

    def SetJointPositionGoal(self, newValue):
        r"""SetJointPositionGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPositionGoal(self, newValue)

    def JointPositionGoal(self, *args):
        r"""
        JointPositionGoal(prmRobotState self) -> vctDoubleVec const
        JointPositionGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPositionGoal(self, *args)

    def GetJointPositionGoal(self, *args):
        r"""
        GetJointPositionGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPositionGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPositionGoal(self, *args)

    def SetJointVelocityGoal(self, newValue):
        r"""SetJointVelocityGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocityGoal(self, newValue)

    def JointVelocityGoal(self, *args):
        r"""
        JointVelocityGoal(prmRobotState self) -> vctDoubleVec const
        JointVelocityGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocityGoal(self, *args)

    def GetJointVelocityGoal(self, *args):
        r"""
        GetJointVelocityGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocityGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocityGoal(self, *args)

    def SetJointPositionError(self, newValue):
        r"""SetJointPositionError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPositionError(self, newValue)

    def JointPositionError(self, *args):
        r"""
        JointPositionError(prmRobotState self) -> vctDoubleVec const
        JointPositionError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPositionError(self, *args)

    def GetJointPositionError(self, *args):
        r"""
        GetJointPositionError(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPositionError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPositionError(self, *args)

    def SetJointVelocityError(self, newValue):
        r"""SetJointVelocityError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocityError(self, newValue)

    def JointVelocityError(self, *args):
        r"""
        JointVelocityError(prmRobotState self) -> vctDoubleVec const
        JointVelocityError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocityError(self, *args)

    def GetJointVelocityError(self, *args):
        r"""
        GetJointVelocityError(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocityError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocityError(self, *args)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmRobotState self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmRobotState self) -> std::string const
        ReferenceFrame(prmRobotState self) -> std::string &
        """
        return _cisstParameterTypesPython.prmRobotState_ReferenceFrame(self, *args)

    def GetReferenceFrame(self, *args):
        r"""
        GetReferenceFrame(prmRobotState self, std::string & placeHolder)
        GetReferenceFrame(prmRobotState self) -> std::string const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetReferenceFrame(self, *args)

    def SetMovingFrame(self, newValue):
        r"""SetMovingFrame(prmRobotState self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetMovingFrame(self, newValue)

    def MovingFrame(self, *args):
        r"""
        MovingFrame(prmRobotState self) -> std::string const
        MovingFrame(prmRobotState self) -> std::string &
        """
        return _cisstParameterTypesPython.prmRobotState_MovingFrame(self, *args)

    def GetMovingFrame(self, *args):
        r"""
        GetMovingFrame(prmRobotState self, std::string & placeHolder)
        GetMovingFrame(prmRobotState self) -> std::string const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetMovingFrame(self, *args)

    def SetCartesianPosition(self, newValue):
        r"""SetCartesianPosition(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPosition(self, newValue)

    def CartesianPosition(self, *args):
        r"""
        CartesianPosition(prmRobotState self) -> vctDoubleVec const
        CartesianPosition(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPosition(self, *args)

    def GetCartesianPosition(self, *args):
        r"""
        GetCartesianPosition(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPosition(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPosition(self, *args)

    def SetCartesianVelocity(self, newValue):
        r"""SetCartesianVelocity(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocity(self, newValue)

    def CartesianVelocity(self, *args):
        r"""
        CartesianVelocity(prmRobotState self) -> vctDoubleVec const
        CartesianVelocity(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocity(self, *args)

    def GetCartesianVelocity(self, *args):
        r"""
        GetCartesianVelocity(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocity(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocity(self, *args)

    def SetCartesianPositionGoal(self, newValue):
        r"""SetCartesianPositionGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPositionGoal(self, newValue)

    def CartesianPositionGoal(self, *args):
        r"""
        CartesianPositionGoal(prmRobotState self) -> vctDoubleVec const
        CartesianPositionGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPositionGoal(self, *args)

    def GetCartesianPositionGoal(self, *args):
        r"""
        GetCartesianPositionGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPositionGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPositionGoal(self, *args)

    def SetCartesianVelocityGoal(self, newValue):
        r"""SetCartesianVelocityGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocityGoal(self, newValue)

    def CartesianVelocityGoal(self, *args):
        r"""
        CartesianVelocityGoal(prmRobotState self) -> vctDoubleVec const
        CartesianVelocityGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocityGoal(self, *args)

    def GetCartesianVelocityGoal(self, *args):
        r"""
        GetCartesianVelocityGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocityGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocityGoal(self, *args)

    def SetCartesianPositionError(self, newValue):
        r"""SetCartesianPositionError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPositionError(self, newValue)

    def CartesianPositionError(self, *args):
        r"""
        CartesianPositionError(prmRobotState self) -> vctDoubleVec const
        CartesianPositionError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPositionError(self, *args)

    def GetCartesianPositionError(self, *args):
        r"""
        GetCartesianPositionError(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPositionError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPositionError(self, *args)

    def SetCartesianVelocityError(self, newValue):
        r"""SetCartesianVelocityError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocityError(self, newValue)

    def CartesianVelocityError(self, *args):
        r"""
        CartesianVelocityError(prmRobotState self) -> vctDoubleVec const
        CartesianVelocityError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocityError(self, *args)

    def GetCartesianVelocityError(self, *args):
        r"""
        GetCartesianVelocityError(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocityError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocityError(self, *args)

    def SetEndEffectorFrame(self, newValue):
        r"""SetEndEffectorFrame(prmRobotState self, vctFrm3 newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetEndEffectorFrame(self, newValue)

    def EndEffectorFrame(self, *args):
        r"""
        EndEffectorFrame(prmRobotState self) -> vctFrm3
        EndEffectorFrame(prmRobotState self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmRobotState_EndEffectorFrame(self, *args)

    def GetEndEffectorFrame(self, *args):
        r"""
        GetEndEffectorFrame(prmRobotState self, vctFrm3 placeHolder)
        GetEndEffectorFrame(prmRobotState self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmRobotState_GetEndEffectorFrame(self, *args)

# Register prmRobotState in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmRobotState_swigregister(prmRobotState)

def prmRobotState_ClassServices():
    r"""prmRobotState_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmRobotState_ClassServices()


def prmRobotStateToStateJointMeasured(input, output):
    r"""prmRobotStateToStateJointMeasured(prmRobotState input, prmStateJoint output) -> bool"""
    return _cisstParameterTypesPython.prmRobotStateToStateJointMeasured(input, output)

def prmRobotStateToStateJointSetpoint(input, output):
    r"""prmRobotStateToStateJointSetpoint(prmRobotState input, prmStateJoint output) -> bool"""
    return _cisstParameterTypesPython.prmRobotStateToStateJointSetpoint(input, output)

def prmRobotStateToCartesianPositionRxRyMeasured(input, output):
    r"""prmRobotStateToCartesianPositionRxRyMeasured(prmRobotState input, prmPositionCartesianGet output) -> bool"""
    return _cisstParameterTypesPython.prmRobotStateToCartesianPositionRxRyMeasured(input, output)

def prmRobotStateToCartesianPositionRxRySetpoint(input, output):
    r"""prmRobotStateToCartesianPositionRxRySetpoint(prmRobotState input, prmPositionCartesianGet output) -> bool"""
    return _cisstParameterTypesPython.prmRobotStateToCartesianPositionRxRySetpoint(input, output)
class prmStateJoint(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmStateJoint class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmStateJoint self) -> prmStateJoint
        __init__(prmStateJoint self, prmStateJoint other) -> prmStateJoint
        """
        _cisstParameterTypesPython.prmStateJoint_swiginit(self, _cisstParameterTypesPython.new_prmStateJoint(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmStateJoint

    def GetName(self, placeHolder):
        r"""GetName(prmStateJoint self, vctDynamicVector< std::string > & placeHolder)"""
        return _cisstParameterTypesPython.prmStateJoint_GetName(self, placeHolder)

    def SetName(self, newValue):
        r"""SetName(prmStateJoint self, vctDynamicVector< std::string > const & newValue)"""
        return _cisstParameterTypesPython.prmStateJoint_SetName(self, newValue)

    def Name(self, *args):
        r"""
        Name(prmStateJoint self) -> vctDynamicVector< std::string > const
        Name(prmStateJoint self) -> vctDynamicVector< std::string > &
        """
        return _cisstParameterTypesPython.prmStateJoint_Name(self, *args)

    def GetPosition(self, placeHolder):
        r"""GetPosition(prmStateJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmStateJoint_GetPosition(self, placeHolder)

    def SetPosition(self, newValue):
        r"""SetPosition(prmStateJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmStateJoint_SetPosition(self, newValue)

    def Position(self, *args):
        r"""
        Position(prmStateJoint self) -> vctDynamicVector< double > const
        Position(prmStateJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmStateJoint_Position(self, *args)

    def GetVelocity(self, placeHolder):
        r"""GetVelocity(prmStateJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmStateJoint_GetVelocity(self, placeHolder)

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmStateJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmStateJoint_SetVelocity(self, newValue)

    def Velocity(self, *args):
        r"""
        Velocity(prmStateJoint self) -> vctDynamicVector< double > const
        Velocity(prmStateJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmStateJoint_Velocity(self, *args)

    def GetEffort(self, placeHolder):
        r"""GetEffort(prmStateJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmStateJoint_GetEffort(self, placeHolder)

    def SetEffort(self, newValue):
        r"""SetEffort(prmStateJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmStateJoint_SetEffort(self, newValue)

    def Effort(self, *args):
        r"""
        Effort(prmStateJoint self) -> vctDynamicVector< double > const
        Effort(prmStateJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmStateJoint_Effort(self, *args)

    def SetSize(self, size):
        r"""SetSize(prmStateJoint self, size_t const & size)"""
        return _cisstParameterTypesPython.prmStateJoint_SetSize(self, size)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmStateJoint_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmStateJoint_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmStateJoint_ClassServices()

    def Copy(self, source):
        r"""Copy(prmStateJoint self, prmStateJoint source)"""
        return _cisstParameterTypesPython.prmStateJoint_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmStateJoint self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmStateJoint_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmStateJoint self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmStateJoint_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmStateJoint self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmStateJoint_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmStateJoint self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmStateJoint_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmStateJoint self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmStateJoint_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmStateJoint self) -> std::string"""
        return _cisstParameterTypesPython.prmStateJoint___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmStateJoint self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmStateJoint_ScalarDescription(self, *args)

# Register prmStateJoint in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmStateJoint_swigregister(prmStateJoint)

def prmStateJoint_ClassServices():
    r"""prmStateJoint_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmStateJoint_ClassServices()

class prmConfigurationJoint(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmConfigurationJoint class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmConfigurationJoint self) -> prmConfigurationJoint
        __init__(prmConfigurationJoint self, prmConfigurationJoint other) -> prmConfigurationJoint
        """
        _cisstParameterTypesPython.prmConfigurationJoint_swiginit(self, _cisstParameterTypesPython.new_prmConfigurationJoint(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmConfigurationJoint

    def GetName(self, placeHolder):
        r"""GetName(prmConfigurationJoint self, vctDynamicVector< std::string > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetName(self, placeHolder)

    def SetName(self, newValue):
        r"""SetName(prmConfigurationJoint self, vctDynamicVector< std::string > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetName(self, newValue)

    def Name(self, *args):
        r"""
        Name(prmConfigurationJoint self) -> vctDynamicVector< std::string > const
        Name(prmConfigurationJoint self) -> vctDynamicVector< std::string > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_Name(self, *args)

    def GetType(self, placeHolder):
        r"""GetType(prmConfigurationJoint self, vctDynamicVector< cmnJointType > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetType(self, placeHolder)

    def SetType(self, newValue):
        r"""SetType(prmConfigurationJoint self, vctDynamicVector< cmnJointType > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetType(self, newValue)

    def Type(self, *args):
        r"""
        Type(prmConfigurationJoint self) -> vctDynamicVector< cmnJointType > const
        Type(prmConfigurationJoint self) -> vctDynamicVector< cmnJointType > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_Type(self, *args)

    def GetPositionMin(self, placeHolder):
        r"""GetPositionMin(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetPositionMin(self, placeHolder)

    def SetPositionMin(self, newValue):
        r"""SetPositionMin(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetPositionMin(self, newValue)

    def PositionMin(self, *args):
        r"""
        PositionMin(prmConfigurationJoint self) -> vctDynamicVector< double > const
        PositionMin(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_PositionMin(self, *args)

    def GetPositionMax(self, placeHolder):
        r"""GetPositionMax(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetPositionMax(self, placeHolder)

    def SetPositionMax(self, newValue):
        r"""SetPositionMax(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetPositionMax(self, newValue)

    def PositionMax(self, *args):
        r"""
        PositionMax(prmConfigurationJoint self) -> vctDynamicVector< double > const
        PositionMax(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_PositionMax(self, *args)

    def GetVelocityMin(self, placeHolder):
        r"""GetVelocityMin(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetVelocityMin(self, placeHolder)

    def SetVelocityMin(self, newValue):
        r"""SetVelocityMin(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetVelocityMin(self, newValue)

    def VelocityMin(self, *args):
        r"""
        VelocityMin(prmConfigurationJoint self) -> vctDynamicVector< double > const
        VelocityMin(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_VelocityMin(self, *args)

    def GetVelocityMax(self, placeHolder):
        r"""GetVelocityMax(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetVelocityMax(self, placeHolder)

    def SetVelocityMax(self, newValue):
        r"""SetVelocityMax(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetVelocityMax(self, newValue)

    def VelocityMax(self, *args):
        r"""
        VelocityMax(prmConfigurationJoint self) -> vctDynamicVector< double > const
        VelocityMax(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_VelocityMax(self, *args)

    def GetAccelerationMin(self, placeHolder):
        r"""GetAccelerationMin(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetAccelerationMin(self, placeHolder)

    def SetAccelerationMin(self, newValue):
        r"""SetAccelerationMin(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetAccelerationMin(self, newValue)

    def AccelerationMin(self, *args):
        r"""
        AccelerationMin(prmConfigurationJoint self) -> vctDynamicVector< double > const
        AccelerationMin(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_AccelerationMin(self, *args)

    def GetAccelerationMax(self, placeHolder):
        r"""GetAccelerationMax(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetAccelerationMax(self, placeHolder)

    def SetAccelerationMax(self, newValue):
        r"""SetAccelerationMax(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetAccelerationMax(self, newValue)

    def AccelerationMax(self, *args):
        r"""
        AccelerationMax(prmConfigurationJoint self) -> vctDynamicVector< double > const
        AccelerationMax(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_AccelerationMax(self, *args)

    def GetEffortMin(self, placeHolder):
        r"""GetEffortMin(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetEffortMin(self, placeHolder)

    def SetEffortMin(self, newValue):
        r"""SetEffortMin(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetEffortMin(self, newValue)

    def EffortMin(self, *args):
        r"""
        EffortMin(prmConfigurationJoint self) -> vctDynamicVector< double > const
        EffortMin(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_EffortMin(self, *args)

    def GetEffortMax(self, placeHolder):
        r"""GetEffortMax(prmConfigurationJoint self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_GetEffortMax(self, placeHolder)

    def SetEffortMax(self, newValue):
        r"""SetEffortMax(prmConfigurationJoint self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SetEffortMax(self, newValue)

    def EffortMax(self, *args):
        r"""
        EffortMax(prmConfigurationJoint self) -> vctDynamicVector< double > const
        EffortMax(prmConfigurationJoint self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmConfigurationJoint_EffortMax(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmConfigurationJoint_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmConfigurationJoint_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmConfigurationJoint_ClassServices()

    def Copy(self, source):
        r"""Copy(prmConfigurationJoint self, prmConfigurationJoint source)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmConfigurationJoint self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmConfigurationJoint self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmConfigurationJoint_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmConfigurationJoint self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmConfigurationJoint self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmConfigurationJoint_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmConfigurationJoint self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmConfigurationJoint_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmConfigurationJoint self) -> std::string"""
        return _cisstParameterTypesPython.prmConfigurationJoint___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmConfigurationJoint self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmConfigurationJoint_ScalarDescription(self, *args)

# Register prmConfigurationJoint in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmConfigurationJoint_swigregister(prmConfigurationJoint)

def prmConfigurationJoint_ClassServices():
    r"""prmConfigurationJoint_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmConfigurationJoint_ClassServices()

class prmOperatingState(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmOperatingState class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmOperatingState self) -> prmOperatingState
        __init__(prmOperatingState self, prmOperatingState other) -> prmOperatingState
        """
        _cisstParameterTypesPython.prmOperatingState_swiginit(self, _cisstParameterTypesPython.new_prmOperatingState(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmOperatingState
    UNDEFINED = _cisstParameterTypesPython.prmOperatingState_UNDEFINED
    
    DISABLED = _cisstParameterTypesPython.prmOperatingState_DISABLED
    
    ENABLED = _cisstParameterTypesPython.prmOperatingState_ENABLED
    
    PAUSED = _cisstParameterTypesPython.prmOperatingState_PAUSED
    
    FAULT = _cisstParameterTypesPython.prmOperatingState_FAULT
    

    @staticmethod
    def StateTypeToString(value):
        r"""StateTypeToString(prmOperatingState::StateType const & value) -> std::string"""
        return _cisstParameterTypesPython.prmOperatingState_StateTypeToString(value)

    @staticmethod
    def StateTypeFromString(value):
        r"""StateTypeFromString(std::string const & value) -> prmOperatingState::StateType"""
        return _cisstParameterTypesPython.prmOperatingState_StateTypeFromString(value)

    @staticmethod
    def StateTypeVectorInt():
        r"""StateTypeVectorInt() -> std::vector< int,std::allocator< int > > const &"""
        return _cisstParameterTypesPython.prmOperatingState_StateTypeVectorInt()

    @staticmethod
    def StateTypeVectorString():
        r"""StateTypeVectorString() -> mtsStringVector"""
        return _cisstParameterTypesPython.prmOperatingState_StateTypeVectorString()
    enable = _cisstParameterTypesPython.prmOperatingState_enable
    
    disable = _cisstParameterTypesPython.prmOperatingState_disable
    
    pause = _cisstParameterTypesPython.prmOperatingState_pause
    
    resume = _cisstParameterTypesPython.prmOperatingState_resume
    
    home = _cisstParameterTypesPython.prmOperatingState_home
    
    unhome = _cisstParameterTypesPython.prmOperatingState_unhome
    

    @staticmethod
    def CommandTypeToString(value):
        r"""CommandTypeToString(prmOperatingState::CommandType const & value) -> std::string"""
        return _cisstParameterTypesPython.prmOperatingState_CommandTypeToString(value)

    @staticmethod
    def CommandTypeFromString(value):
        r"""CommandTypeFromString(std::string const & value) -> prmOperatingState::CommandType"""
        return _cisstParameterTypesPython.prmOperatingState_CommandTypeFromString(value)

    @staticmethod
    def CommandTypeVectorInt():
        r"""CommandTypeVectorInt() -> std::vector< int,std::allocator< int > > const &"""
        return _cisstParameterTypesPython.prmOperatingState_CommandTypeVectorInt()

    @staticmethod
    def CommandTypeVectorString():
        r"""CommandTypeVectorString() -> mtsStringVector"""
        return _cisstParameterTypesPython.prmOperatingState_CommandTypeVectorString()

    def GetState(self, placeHolder):
        r"""GetState(prmOperatingState self, prmOperatingState::StateType & placeHolder)"""
        return _cisstParameterTypesPython.prmOperatingState_GetState(self, placeHolder)

    def SetState(self, newValue):
        r"""SetState(prmOperatingState self, prmOperatingState::StateType const & newValue)"""
        return _cisstParameterTypesPython.prmOperatingState_SetState(self, newValue)

    def State(self, *args):
        r"""
        State(prmOperatingState self) -> prmOperatingState::StateType const
        State(prmOperatingState self) -> prmOperatingState::StateType &
        """
        return _cisstParameterTypesPython.prmOperatingState_State(self, *args)

    def GetSubState(self, placeHolder):
        r"""GetSubState(prmOperatingState self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmOperatingState_GetSubState(self, placeHolder)

    def SetSubState(self, newValue):
        r"""SetSubState(prmOperatingState self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmOperatingState_SetSubState(self, newValue)

    def SubState(self, *args):
        r"""
        SubState(prmOperatingState self) -> std::string const
        SubState(prmOperatingState self) -> std::string &
        """
        return _cisstParameterTypesPython.prmOperatingState_SubState(self, *args)

    def GetIsHomed(self, placeHolder):
        r"""GetIsHomed(prmOperatingState self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmOperatingState_GetIsHomed(self, placeHolder)

    def SetIsHomed(self, newValue):
        r"""SetIsHomed(prmOperatingState self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmOperatingState_SetIsHomed(self, newValue)

    def IsHomed(self, *args):
        r"""
        IsHomed(prmOperatingState self) -> bool const
        IsHomed(prmOperatingState self) -> bool &
        """
        return _cisstParameterTypesPython.prmOperatingState_IsHomed(self, *args)

    def GetIsBusy(self, placeHolder):
        r"""GetIsBusy(prmOperatingState self, bool & placeHolder)"""
        return _cisstParameterTypesPython.prmOperatingState_GetIsBusy(self, placeHolder)

    def SetIsBusy(self, newValue):
        r"""SetIsBusy(prmOperatingState self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmOperatingState_SetIsBusy(self, newValue)

    def IsBusy(self, *args):
        r"""
        IsBusy(prmOperatingState self) -> bool const
        IsBusy(prmOperatingState self) -> bool &
        """
        return _cisstParameterTypesPython.prmOperatingState_IsBusy(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmOperatingState_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmOperatingState_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmOperatingState_ClassServices()

    def IsEnabledHomedAndNotBusy(self):
        r"""IsEnabledHomedAndNotBusy(prmOperatingState self) -> bool"""
        return _cisstParameterTypesPython.prmOperatingState_IsEnabledHomedAndNotBusy(self)

    def IsEnabledAndHomed(self):
        r"""IsEnabledAndHomed(prmOperatingState self) -> bool"""
        return _cisstParameterTypesPython.prmOperatingState_IsEnabledAndHomed(self)

    def ValidCommand(self, command, newOperatingState, humanReadableMessage):
        r"""ValidCommand(prmOperatingState self, prmOperatingState::CommandType const & command, prmOperatingState::StateType & newOperatingState, std::string & humanReadableMessage) -> bool"""
        return _cisstParameterTypesPython.prmOperatingState_ValidCommand(self, command, newOperatingState, humanReadableMessage)

    def Copy(self, source):
        r"""Copy(prmOperatingState self, prmOperatingState source)"""
        return _cisstParameterTypesPython.prmOperatingState_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmOperatingState self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmOperatingState_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmOperatingState self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmOperatingState_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmOperatingState self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmOperatingState_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmOperatingState self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmOperatingState_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmOperatingState self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmOperatingState_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmOperatingState self) -> std::string"""
        return _cisstParameterTypesPython.prmOperatingState___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmOperatingState self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmOperatingState_ScalarDescription(self, *args)

# Register prmOperatingState in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmOperatingState_swigregister(prmOperatingState)

def prmOperatingState_StateTypeToString(value):
    r"""prmOperatingState_StateTypeToString(prmOperatingState::StateType const & value) -> std::string"""
    return _cisstParameterTypesPython.prmOperatingState_StateTypeToString(value)

def prmOperatingState_StateTypeFromString(value):
    r"""prmOperatingState_StateTypeFromString(std::string const & value) -> prmOperatingState::StateType"""
    return _cisstParameterTypesPython.prmOperatingState_StateTypeFromString(value)

def prmOperatingState_StateTypeVectorInt():
    r"""prmOperatingState_StateTypeVectorInt() -> std::vector< int,std::allocator< int > > const &"""
    return _cisstParameterTypesPython.prmOperatingState_StateTypeVectorInt()

def prmOperatingState_StateTypeVectorString():
    r"""prmOperatingState_StateTypeVectorString() -> mtsStringVector"""
    return _cisstParameterTypesPython.prmOperatingState_StateTypeVectorString()

def prmOperatingState_CommandTypeToString(value):
    r"""prmOperatingState_CommandTypeToString(prmOperatingState::CommandType const & value) -> std::string"""
    return _cisstParameterTypesPython.prmOperatingState_CommandTypeToString(value)

def prmOperatingState_CommandTypeFromString(value):
    r"""prmOperatingState_CommandTypeFromString(std::string const & value) -> prmOperatingState::CommandType"""
    return _cisstParameterTypesPython.prmOperatingState_CommandTypeFromString(value)

def prmOperatingState_CommandTypeVectorInt():
    r"""prmOperatingState_CommandTypeVectorInt() -> std::vector< int,std::allocator< int > > const &"""
    return _cisstParameterTypesPython.prmOperatingState_CommandTypeVectorInt()

def prmOperatingState_CommandTypeVectorString():
    r"""prmOperatingState_CommandTypeVectorString() -> mtsStringVector"""
    return _cisstParameterTypesPython.prmOperatingState_CommandTypeVectorString()

def prmOperatingState_ClassServices():
    r"""prmOperatingState_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmOperatingState_ClassServices()


def cmnDataHumanReadable_prmOperatingState_StateType(data):
    r"""cmnDataHumanReadable_prmOperatingState_StateType(prmOperatingState::StateType const & data) -> std::string"""
    return _cisstParameterTypesPython.cmnDataHumanReadable_prmOperatingState_StateType(data)

def cmnDataHumanReadable_prmOperatingState_CommandType(data):
    r"""cmnDataHumanReadable_prmOperatingState_CommandType(prmOperatingState::CommandType const & data) -> std::string"""
    return _cisstParameterTypesPython.cmnDataHumanReadable_prmOperatingState_CommandType(data)
class prmActuatorState(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmActuatorState class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmActuatorState_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmActuatorState_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmActuatorState_ClassServices()

    def __init__(self, *args):
        r"""
        __init__(prmActuatorState self) -> prmActuatorState
        __init__(prmActuatorState self, prmActuatorState::size_type size) -> prmActuatorState
        """
        _cisstParameterTypesPython.prmActuatorState_swiginit(self, _cisstParameterTypesPython.new_prmActuatorState(*args))

    def SetSize(self, size):
        r"""SetSize(prmActuatorState self, prmActuatorState::size_type size)"""
        return _cisstParameterTypesPython.prmActuatorState_SetSize(self, size)
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmActuatorState

    def SetPosition(self, newValue):
        r"""SetPosition(prmActuatorState self, mtsDoubleVec newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetPosition(self, newValue)

    def Position(self, *args):
        r"""
        Position(prmActuatorState self) -> mtsDoubleVec
        Position(prmActuatorState self) -> mtsDoubleVec
        """
        return _cisstParameterTypesPython.prmActuatorState_Position(self, *args)

    def GetPosition(self, *args):
        r"""
        GetPosition(prmActuatorState self, mtsDoubleVec placeHolder)
        GetPosition(prmActuatorState self) -> mtsDoubleVec
        """
        return _cisstParameterTypesPython.prmActuatorState_GetPosition(self, *args)

    def SetVelocity(self, newValue):
        r"""SetVelocity(prmActuatorState self, mtsDoubleVec newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetVelocity(self, newValue)

    def Velocity(self, *args):
        r"""
        Velocity(prmActuatorState self) -> mtsDoubleVec
        Velocity(prmActuatorState self) -> mtsDoubleVec
        """
        return _cisstParameterTypesPython.prmActuatorState_Velocity(self, *args)

    def GetVelocity(self, *args):
        r"""
        GetVelocity(prmActuatorState self, mtsDoubleVec placeHolder)
        GetVelocity(prmActuatorState self) -> mtsDoubleVec
        """
        return _cisstParameterTypesPython.prmActuatorState_GetVelocity(self, *args)

    def SetInMotion(self, newValue):
        r"""SetInMotion(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetInMotion(self, newValue)

    def InMotion(self, *args):
        r"""
        InMotion(prmActuatorState self) -> vctBoolVec const
        InMotion(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_InMotion(self, *args)

    def GetInMotion(self, *args):
        r"""
        GetInMotion(prmActuatorState self, vctBoolVec & placeHolder)
        GetInMotion(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetInMotion(self, *args)

    def SetMotorOff(self, newValue):
        r"""SetMotorOff(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetMotorOff(self, newValue)

    def MotorOff(self, *args):
        r"""
        MotorOff(prmActuatorState self) -> vctBoolVec const
        MotorOff(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_MotorOff(self, *args)

    def GetMotorOff(self, *args):
        r"""
        GetMotorOff(prmActuatorState self, vctBoolVec & placeHolder)
        GetMotorOff(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetMotorOff(self, *args)

    def SetSoftFwdLimitHit(self, newValue):
        r"""SetSoftFwdLimitHit(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetSoftFwdLimitHit(self, newValue)

    def SoftFwdLimitHit(self, *args):
        r"""
        SoftFwdLimitHit(prmActuatorState self) -> vctBoolVec const
        SoftFwdLimitHit(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_SoftFwdLimitHit(self, *args)

    def GetSoftFwdLimitHit(self, *args):
        r"""
        GetSoftFwdLimitHit(prmActuatorState self, vctBoolVec & placeHolder)
        GetSoftFwdLimitHit(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetSoftFwdLimitHit(self, *args)

    def SetSoftRevLimitHit(self, newValue):
        r"""SetSoftRevLimitHit(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetSoftRevLimitHit(self, newValue)

    def SoftRevLimitHit(self, *args):
        r"""
        SoftRevLimitHit(prmActuatorState self) -> vctBoolVec const
        SoftRevLimitHit(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_SoftRevLimitHit(self, *args)

    def GetSoftRevLimitHit(self, *args):
        r"""
        GetSoftRevLimitHit(prmActuatorState self, vctBoolVec & placeHolder)
        GetSoftRevLimitHit(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetSoftRevLimitHit(self, *args)

    def SetHardFwdLimitHit(self, newValue):
        r"""SetHardFwdLimitHit(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetHardFwdLimitHit(self, newValue)

    def HardFwdLimitHit(self, *args):
        r"""
        HardFwdLimitHit(prmActuatorState self) -> vctBoolVec const
        HardFwdLimitHit(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_HardFwdLimitHit(self, *args)

    def GetHardFwdLimitHit(self, *args):
        r"""
        GetHardFwdLimitHit(prmActuatorState self, vctBoolVec & placeHolder)
        GetHardFwdLimitHit(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetHardFwdLimitHit(self, *args)

    def SetHardRevLimitHit(self, newValue):
        r"""SetHardRevLimitHit(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetHardRevLimitHit(self, newValue)

    def HardRevLimitHit(self, *args):
        r"""
        HardRevLimitHit(prmActuatorState self) -> vctBoolVec const
        HardRevLimitHit(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_HardRevLimitHit(self, *args)

    def GetHardRevLimitHit(self, *args):
        r"""
        GetHardRevLimitHit(prmActuatorState self, vctBoolVec & placeHolder)
        GetHardRevLimitHit(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetHardRevLimitHit(self, *args)

    def SetHomeSwitchOn(self, newValue):
        r"""SetHomeSwitchOn(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetHomeSwitchOn(self, newValue)

    def HomeSwitchOn(self, *args):
        r"""
        HomeSwitchOn(prmActuatorState self) -> vctBoolVec const
        HomeSwitchOn(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_HomeSwitchOn(self, *args)

    def GetHomeSwitchOn(self, *args):
        r"""
        GetHomeSwitchOn(prmActuatorState self, vctBoolVec & placeHolder)
        GetHomeSwitchOn(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetHomeSwitchOn(self, *args)

    def SetIsHomed(self, newValue):
        r"""SetIsHomed(prmActuatorState self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetIsHomed(self, newValue)

    def IsHomed(self, *args):
        r"""
        IsHomed(prmActuatorState self) -> vctBoolVec const
        IsHomed(prmActuatorState self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmActuatorState_IsHomed(self, *args)

    def GetIsHomed(self, *args):
        r"""
        GetIsHomed(prmActuatorState self, vctBoolVec & placeHolder)
        GetIsHomed(prmActuatorState self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetIsHomed(self, *args)

    def SetEStopON(self, newValue):
        r"""SetEStopON(prmActuatorState self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmActuatorState_SetEStopON(self, newValue)

    def EStopON(self, *args):
        r"""
        EStopON(prmActuatorState self) -> bool const
        EStopON(prmActuatorState self) -> bool &
        """
        return _cisstParameterTypesPython.prmActuatorState_EStopON(self, *args)

    def GetEStopON(self, *args):
        r"""
        GetEStopON(prmActuatorState self, bool & placeHolder)
        GetEStopON(prmActuatorState self) -> bool const &
        """
        return _cisstParameterTypesPython.prmActuatorState_GetEStopON(self, *args)

# Register prmActuatorState in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmActuatorState_swigregister(prmActuatorState)

def prmActuatorState_ClassServices():
    r"""prmActuatorState_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmActuatorState_ClassServices()

class prmImageFrame(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmImageFrame class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmImageFrame self) -> prmImageFrame
        __init__(prmImageFrame self, prmImageFrame other) -> prmImageFrame
        """
        _cisstParameterTypesPython.prmImageFrame_swiginit(self, _cisstParameterTypesPython.new_prmImageFrame(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmImageFrame

    def GetWidth(self, placeHolder):
        r"""GetWidth(prmImageFrame self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmImageFrame_GetWidth(self, placeHolder)

    def SetWidth(self, newValue):
        r"""SetWidth(prmImageFrame self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmImageFrame_SetWidth(self, newValue)

    def Width(self, *args):
        r"""
        Width(prmImageFrame self) -> size_t const
        Width(prmImageFrame self) -> size_t &
        """
        return _cisstParameterTypesPython.prmImageFrame_Width(self, *args)

    def GetHeight(self, placeHolder):
        r"""GetHeight(prmImageFrame self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmImageFrame_GetHeight(self, placeHolder)

    def SetHeight(self, newValue):
        r"""SetHeight(prmImageFrame self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmImageFrame_SetHeight(self, newValue)

    def Height(self, *args):
        r"""
        Height(prmImageFrame self) -> size_t const
        Height(prmImageFrame self) -> size_t &
        """
        return _cisstParameterTypesPython.prmImageFrame_Height(self, *args)

    def GetChannels(self, placeHolder):
        r"""GetChannels(prmImageFrame self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmImageFrame_GetChannels(self, placeHolder)

    def SetChannels(self, newValue):
        r"""SetChannels(prmImageFrame self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmImageFrame_SetChannels(self, newValue)

    def Channels(self, *args):
        r"""
        Channels(prmImageFrame self) -> size_t const
        Channels(prmImageFrame self) -> size_t &
        """
        return _cisstParameterTypesPython.prmImageFrame_Channels(self, *args)

    def GetData(self, placeHolder):
        r"""GetData(prmImageFrame self, vctDynamicVector< char > & placeHolder)"""
        return _cisstParameterTypesPython.prmImageFrame_GetData(self, placeHolder)

    def SetData(self, newValue):
        r"""SetData(prmImageFrame self, vctDynamicVector< char > const & newValue)"""
        return _cisstParameterTypesPython.prmImageFrame_SetData(self, newValue)

    def Data(self, *args):
        r"""
        Data(prmImageFrame self) -> vctDynamicVector< char > const
        Data(prmImageFrame self) -> vctDynamicVector< char > &
        """
        return _cisstParameterTypesPython.prmImageFrame_Data(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmImageFrame_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmImageFrame_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmImageFrame_ClassServices()

    def Copy(self, source):
        r"""Copy(prmImageFrame self, prmImageFrame source)"""
        return _cisstParameterTypesPython.prmImageFrame_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmImageFrame self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmImageFrame_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmImageFrame self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmImageFrame_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmImageFrame self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmImageFrame_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmImageFrame self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmImageFrame_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmImageFrame self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmImageFrame_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmImageFrame self) -> std::string"""
        return _cisstParameterTypesPython.prmImageFrame___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmImageFrame self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmImageFrame_ScalarDescription(self, *args)

# Register prmImageFrame in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmImageFrame_swigregister(prmImageFrame)

def prmImageFrame_ClassServices():
    r"""prmImageFrame_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmImageFrame_ClassServices()

class prmCameraInfo(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmCameraInfo class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmCameraInfo self) -> prmCameraInfo
        __init__(prmCameraInfo self, prmCameraInfo other) -> prmCameraInfo
        """
        _cisstParameterTypesPython.prmCameraInfo_swiginit(self, _cisstParameterTypesPython.new_prmCameraInfo(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmCameraInfo

    def GetWidth(self, placeHolder):
        r"""GetWidth(prmCameraInfo self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetWidth(self, placeHolder)

    def SetWidth(self, newValue):
        r"""SetWidth(prmCameraInfo self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetWidth(self, newValue)

    def Width(self, *args):
        r"""
        Width(prmCameraInfo self) -> size_t const
        Width(prmCameraInfo self) -> size_t &
        """
        return _cisstParameterTypesPython.prmCameraInfo_Width(self, *args)

    def GetHeight(self, placeHolder):
        r"""GetHeight(prmCameraInfo self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetHeight(self, placeHolder)

    def SetHeight(self, newValue):
        r"""SetHeight(prmCameraInfo self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetHeight(self, newValue)

    def Height(self, *args):
        r"""
        Height(prmCameraInfo self) -> size_t const
        Height(prmCameraInfo self) -> size_t &
        """
        return _cisstParameterTypesPython.prmCameraInfo_Height(self, *args)

    def GetDistortionParameters(self, placeHolder):
        r"""GetDistortionParameters(prmCameraInfo self, vctDoubleVec & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetDistortionParameters(self, placeHolder)

    def SetDistortionParameters(self, newValue):
        r"""SetDistortionParameters(prmCameraInfo self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetDistortionParameters(self, newValue)

    def DistortionParameters(self, *args):
        r"""
        DistortionParameters(prmCameraInfo self) -> vctDoubleVec const
        DistortionParameters(prmCameraInfo self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmCameraInfo_DistortionParameters(self, *args)

    def GetIntrinsic(self, placeHolder):
        r"""GetIntrinsic(prmCameraInfo self, vct3x3 & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetIntrinsic(self, placeHolder)

    def SetIntrinsic(self, newValue):
        r"""SetIntrinsic(prmCameraInfo self, vct3x3 const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetIntrinsic(self, newValue)

    def Intrinsic(self, *args):
        r"""
        Intrinsic(prmCameraInfo self) -> vct3x3 const
        Intrinsic(prmCameraInfo self) -> vct3x3 &
        """
        return _cisstParameterTypesPython.prmCameraInfo_Intrinsic(self, *args)

    def GetRectification(self, placeHolder):
        r"""GetRectification(prmCameraInfo self, vctRot3 & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetRectification(self, placeHolder)

    def SetRectification(self, newValue):
        r"""SetRectification(prmCameraInfo self, vctRot3 const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetRectification(self, newValue)

    def Rectification(self, *args):
        r"""
        Rectification(prmCameraInfo self) -> vctRot3 const
        Rectification(prmCameraInfo self) -> vctRot3 &
        """
        return _cisstParameterTypesPython.prmCameraInfo_Rectification(self, *args)

    def GetProjection(self, placeHolder):
        r"""GetProjection(prmCameraInfo self, vct3x4 & placeHolder)"""
        return _cisstParameterTypesPython.prmCameraInfo_GetProjection(self, placeHolder)

    def SetProjection(self, newValue):
        r"""SetProjection(prmCameraInfo self, vct3x4 const & newValue)"""
        return _cisstParameterTypesPython.prmCameraInfo_SetProjection(self, newValue)

    def Projection(self, *args):
        r"""
        Projection(prmCameraInfo self) -> vct3x4 const
        Projection(prmCameraInfo self) -> vct3x4 &
        """
        return _cisstParameterTypesPython.prmCameraInfo_Projection(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmCameraInfo_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmCameraInfo_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmCameraInfo_ClassServices()

    def Copy(self, source):
        r"""Copy(prmCameraInfo self, prmCameraInfo source)"""
        return _cisstParameterTypesPython.prmCameraInfo_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmCameraInfo self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmCameraInfo_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmCameraInfo self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmCameraInfo_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmCameraInfo self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmCameraInfo_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmCameraInfo self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmCameraInfo_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmCameraInfo self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmCameraInfo_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmCameraInfo self) -> std::string"""
        return _cisstParameterTypesPython.prmCameraInfo___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmCameraInfo self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmCameraInfo_ScalarDescription(self, *args)

# Register prmCameraInfo in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmCameraInfo_swigregister(prmCameraInfo)

def prmCameraInfo_ClassServices():
    r"""prmCameraInfo_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmCameraInfo_ClassServices()

class prmDepthMap(cisstMultiTaskPython.mtsGenericObject):
    r"""Proxy of C++ prmDepthMap class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(prmDepthMap self) -> prmDepthMap
        __init__(prmDepthMap self, prmDepthMap other) -> prmDepthMap
        """
        _cisstParameterTypesPython.prmDepthMap_swiginit(self, _cisstParameterTypesPython.new_prmDepthMap(*args))
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmDepthMap

    def GetWidth(self, placeHolder):
        r"""GetWidth(prmDepthMap self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmDepthMap_GetWidth(self, placeHolder)

    def SetWidth(self, newValue):
        r"""SetWidth(prmDepthMap self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmDepthMap_SetWidth(self, newValue)

    def Width(self, *args):
        r"""
        Width(prmDepthMap self) -> size_t const
        Width(prmDepthMap self) -> size_t &
        """
        return _cisstParameterTypesPython.prmDepthMap_Width(self, *args)

    def GetHeight(self, placeHolder):
        r"""GetHeight(prmDepthMap self, size_t & placeHolder)"""
        return _cisstParameterTypesPython.prmDepthMap_GetHeight(self, placeHolder)

    def SetHeight(self, newValue):
        r"""SetHeight(prmDepthMap self, size_t const & newValue)"""
        return _cisstParameterTypesPython.prmDepthMap_SetHeight(self, newValue)

    def Height(self, *args):
        r"""
        Height(prmDepthMap self) -> size_t const
        Height(prmDepthMap self) -> size_t &
        """
        return _cisstParameterTypesPython.prmDepthMap_Height(self, *args)

    def GetPoints(self, placeHolder):
        r"""GetPoints(prmDepthMap self, vctDynamicVector< float > & placeHolder)"""
        return _cisstParameterTypesPython.prmDepthMap_GetPoints(self, placeHolder)

    def SetPoints(self, newValue):
        r"""SetPoints(prmDepthMap self, vctDynamicVector< float > const & newValue)"""
        return _cisstParameterTypesPython.prmDepthMap_SetPoints(self, newValue)

    def Points(self, *args):
        r"""
        Points(prmDepthMap self) -> vctDynamicVector< float > const
        Points(prmDepthMap self) -> vctDynamicVector< float > &
        """
        return _cisstParameterTypesPython.prmDepthMap_Points(self, *args)

    def GetColor(self, placeHolder):
        r"""GetColor(prmDepthMap self, vctDynamicVector< char > & placeHolder)"""
        return _cisstParameterTypesPython.prmDepthMap_GetColor(self, placeHolder)

    def SetColor(self, newValue):
        r"""SetColor(prmDepthMap self, vctDynamicVector< char > const & newValue)"""
        return _cisstParameterTypesPython.prmDepthMap_SetColor(self, newValue)

    def Color(self, *args):
        r"""
        Color(prmDepthMap self) -> vctDynamicVector< char > const
        Color(prmDepthMap self) -> vctDynamicVector< char > &
        """
        return _cisstParameterTypesPython.prmDepthMap_Color(self, *args)

    def GetReferenceFrame(self, placeHolder):
        r"""GetReferenceFrame(prmDepthMap self, std::string & placeHolder)"""
        return _cisstParameterTypesPython.prmDepthMap_GetReferenceFrame(self, placeHolder)

    def SetReferenceFrame(self, newValue):
        r"""SetReferenceFrame(prmDepthMap self, std::string const & newValue)"""
        return _cisstParameterTypesPython.prmDepthMap_SetReferenceFrame(self, newValue)

    def ReferenceFrame(self, *args):
        r"""
        ReferenceFrame(prmDepthMap self) -> std::string const
        ReferenceFrame(prmDepthMap self) -> std::string &
        """
        return _cisstParameterTypesPython.prmDepthMap_ReferenceFrame(self, *args)
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmDepthMap_HAS_DYNAMIC_CREATION
    
    InitialLoD = _cisstParameterTypesPython.prmDepthMap_InitialLoD
    

    @staticmethod
    def ClassServices():
        r"""ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmDepthMap_ClassServices()

    def Copy(self, source):
        r"""Copy(prmDepthMap self, prmDepthMap source)"""
        return _cisstParameterTypesPython.prmDepthMap_Copy(self, source)

    def SerializeBinary(self, outputStream):
        r"""SerializeBinary(prmDepthMap self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmDepthMap_SerializeBinary(self, outputStream)

    def DeSerializeBinary(self, inputStream, localFormat, remoteFormat):
        r"""DeSerializeBinary(prmDepthMap self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmDepthMap_DeSerializeBinary(self, inputStream, localFormat, remoteFormat)

    def SerializeText(self, *args):
        r"""SerializeText(prmDepthMap self, ostream outputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmDepthMap_SerializeText(self, *args)

    def SerializeDescription(self, *args):
        r"""SerializeDescription(prmDepthMap self, char const delimiter=',', std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmDepthMap_SerializeDescription(self, *args)

    def DeSerializeText(self, *args):
        r"""DeSerializeText(prmDepthMap self, istream inputStream, char const delimiter=',')"""
        return _cisstParameterTypesPython.prmDepthMap_DeSerializeText(self, *args)

    def __str__(self):
        r"""__str__(prmDepthMap self) -> std::string"""
        return _cisstParameterTypesPython.prmDepthMap___str__(self)

    def ScalarDescription(self, *args):
        r"""ScalarDescription(prmDepthMap self, size_t const index, std::string const & userDescription="") -> std::string"""
        return _cisstParameterTypesPython.prmDepthMap_ScalarDescription(self, *args)

# Register prmDepthMap in _cisstParameterTypesPython:
_cisstParameterTypesPython.prmDepthMap_swigregister(prmDepthMap)

def prmDepthMap_ClassServices():
    r"""prmDepthMap_ClassServices() -> cmnClassServicesBase"""
    return _cisstParameterTypesPython.prmDepthMap_ClassServices()


def cmnSerializeRaw(*args):
    r"""
    cmnSerializeRaw(ostream outputStream, mtsExecutionResult object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionComponent object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionComponentClass object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionInterface object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionInterfaceFullName object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionConnection object)
    cmnSerializeRaw(ostream outputStream, mtsComponentStatusControl object)
    cmnSerializeRaw(ostream outputStream, mtsComponentStateChange object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionLoadLibrary object)
    cmnSerializeRaw(ostream outputStream, mtsEndUserInterfaceArg object)
    cmnSerializeRaw(ostream outputStream, mtsMessage object)
    cmnSerializeRaw(ostream outputStream, mtsComponentConstructorArg object)
    cmnSerializeRaw(ostream outputStream, mtsTaskConstructorArg object)
    cmnSerializeRaw(ostream outputStream, mtsTaskContinuousConstructorArg object)
    cmnSerializeRaw(ostream outputStream, mtsTaskPeriodicConstructorArg object)
    cmnSerializeRaw(ostream outputStream, mtsComponentState object)
    cmnSerializeRaw(ostream outputStream, mtsCommandVoidDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandWriteDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandReadDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandQualifiedReadDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandVoidReturnDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandWriteReturnDescription object)
    cmnSerializeRaw(ostream outputStream, mtsEventVoidDescription object)
    cmnSerializeRaw(ostream outputStream, mtsEventWriteDescription object)
    cmnSerializeRaw(ostream outputStream, mtsInterfaceProvidedDescription object)
    cmnSerializeRaw(ostream outputStream, mtsInterfaceRequiredDescription object)
    cmnSerializeRaw(ostream outputStream, prmPositionCartesianGet object)
    cmnSerializeRaw(ostream outputStream, prmPositionCartesianSet object)
    cmnSerializeRaw(ostream outputStream, prmVelocityCartesianGet object)
    cmnSerializeRaw(ostream outputStream, prmPositionJointGet object)
    cmnSerializeRaw(ostream outputStream, prmPositionJointSet object)
    cmnSerializeRaw(ostream outputStream, prmStateJoint object)
    cmnSerializeRaw(ostream outputStream, prmConfigurationJoint object)
    cmnSerializeRaw(ostream outputStream, prmOperatingState object)
    cmnSerializeRaw(ostream outputStream, prmImageFrame object)
    cmnSerializeRaw(ostream outputStream, prmCameraInfo object)
    cmnSerializeRaw(ostream outputStream, prmDepthMap object)
    """
    return _cisstParameterTypesPython.cmnSerializeRaw(*args)

def cmnDeSerializeRaw(*args):
    r"""
    cmnDeSerializeRaw(istream inputStream, mtsExecutionResult placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionComponent placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionComponentClass placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionInterface placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionInterfaceFullName placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionConnection placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentStatusControl placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentStateChange placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionLoadLibrary placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEndUserInterfaceArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsMessage placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentConstructorArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsTaskConstructorArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsTaskContinuousConstructorArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsTaskPeriodicConstructorArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentState placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandVoidDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandWriteDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandReadDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandQualifiedReadDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandVoidReturnDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandWriteReturnDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEventVoidDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEventWriteDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsInterfaceProvidedDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsInterfaceRequiredDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionCartesianGet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionCartesianSet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmVelocityCartesianGet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionJointGet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionJointSet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmStateJoint placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmConfigurationJoint placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmOperatingState placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmImageFrame placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmCameraInfo placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmDepthMap placeHolder)
    """
    return _cisstParameterTypesPython.cmnDeSerializeRaw(*args)


